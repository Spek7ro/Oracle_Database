-- PRACTICA 06, ACTIVIDAD 04:
SELECT * FROM REGIONS;

insert into regions values (101,'Great Britain');

insert into regions values
(&Region_number,'&Region_name');

insert into regions values ((select
max(region_id)+1 from regions), 'Oceania');

SELECT * FROM REGIONS;

COMMIT;

-- PRACTICA 06, ACTIVIDAD 05:
update regions set region_name='Scandinavia' where
region_id=101;

update regions set region_name='Iberia' where region_id >
100;

update regions set region_id=(region_id+(select max(region_id) from
regions)) where region_id in (select region_id from regions where
region_id > 100);

SELECT * FROM REGIONS;

COMMIT;

-- PRACTICA 06, ACTIVIDAD 06:
delete from regions where region_id=204;

delete from regions;

delete from regions where region_id in 
(select region_id from regions where region_name='Iberia');

SELECT * FROM REGIONS;

COMMIT;

-- PRACTICA 06, ACTIVIDAD 07:
create table employees_new as select * from employees
where 1=2;

DESC employees_new;

insert into employees_new select * from employees where
employee_id=100;

update employees_new set salary=500 where
employee_id=100;

merge into employees_new e using employees n
on (e.employee_id = n.employee_id)
when matched then
update set e.salary=n.salary
when not matched then
insert(employee_id,first_name,last_name,email,hire_date,job_id,salary) 
values(n.employee_id,n.first_name,n.last_name,n.email,n.hire_date,
n.job_id,n.salary);

select * from employees_new;

-- PRACTICA 06, ACTIVIDAD 09:
-- SESSION 01.
SELECT * FROM regions;

INSERT INTO regions VALUES (100, 'UK');

SELECT * FROM regions;

COMMIT;

SELECT * FROM regions;

ROLLBACK;

SELECT * FROM regions;

DELETE FROM regions WHERE region_id=100;

SELECT * FROM regions;

COMMIT;

SELECT * FROM regions;

-- PRACTICA 07, ACTIVIDAD 04:
SELECT DISTINCT department_id FROM EMPLOYEES;

DESCRIBE JOBS;

DROP TABLE MY_EMPLOYEE;

SELECT EMPLOYEE_ID, JOB_ID, START_DATE, END_DATE, (END_DATE - START_DATE)/365.25 
"Years Employeed" FROM JOB_HISTORY;

SELECT  q'[The Job Id for the ]'  || JOB_TITLE || q'[ JOB IS: ]'  || JOB_ID 
AS "Job Description" FROM JOBS;

SELECT (22/7)*POWER(6000,2) "Area" FROM DUAL;

-- PRACTICA 07, ACTIVIDAD 05:
SELECT last_name, job_id, salary AS Sal FROM employees;

SELECT * FROM JOB_GRADES;

SELECT employee_id, last_name
sal x 12 ANNUAL SALARY
FROM employees;

DESCRIBE departments;

SELECT * FROM departments;

DESCRIBE employees;

SELECT DISTINCT JOB_ID FROM employees;

SELECT EMPLOYEE_ID "EMP #", 
       LAST_NAME "Employee", 
       JOB_ID "Job", 
       HIRE_DATE "Hire Date" 
FROM EMPLOYEES;

SELECT  LAST_NAME || ', ' || 
        JOB_ID "Employee and Title" 
FROM EMPLOYEES;

SELECT  employee_id || ', ' || first_name || ', ' || 
        last_name || ', ' || email || ', ' || 
        phone_number || ', ' || hire_date || ', ' || 
        job_id || ', ' || salary || ', ' || commission_pct || 
        ', ' || manager_id || ', ' || department_id  "THE_OUTPUT"
FROM EMPLOYEES;

-- PRACTICE 08, ACTIVITY 04:
SELECT * FROM DEPARTMENTS WHERE DEPARTMENT_NAME LIKE '%ing';

SELECT JOB_TITLE, MAX_SALARY, MIN_SALARY,
       MAX_SALARY - MIN_SALARY "VARIANCE"
FROM JOBS WHERE JOB_TITLE LIKE '%President%' OR JOB_TITLE LIKE '%Manager%'
ORDER BY MAX_SALARY - MIN_SALARY DESC, JOB_TITLE DESC;

SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, 
       (SALARY * 12) "ANNUAL SALARY",
       &&TAX_RATE "TAX RATE", 
       (&TAX_RATE * (SALARY * 12)) "TAX INFORMATION"
FROM EMPLOYEES WHERE EMPLOYEE_ID = &ID_EMPLOYEE;


-- PRACTICE 09, ACTIVITY 04.
SELECT FIRST_NAME, LAST_NAME  
FROM EMPLOYEES WHERE LOWER(FIRST_NAME) LIKE '%li%';

SELECT FIRST_NAME, LAST_NAME, 
       UPPER(CONCAT(SUBSTR(FIRST_NAME, 1, 1), SUBSTR(LAST_NAME, 1, 14))) "FORMAL NAME"
FROM EMPLOYEES WHERE LENGTH(CONCAT(FIRST_NAME, CONCAT(' ', LAST_NAME))) > 15; 


SELECT EMPLOYEE_ID, LAST_NAME, HIRE_DATE,
       MONTHS_BETWEEN(HIRE_DATE, '01-ENE-2000') "MONTHS WORKED"
FROM EMPLOYEES WHERE MONTHS_BETWEEN(HIRE_DATE, '01-ENE-2000') > 90;


SELECT FIRST_NAME, LAST_NAME, LENGTH(LAST_NAME) "LENGTH OF LAST_NAME",
       INSTR(LAST_NAME, 'a') "Position of 'a' in LAST_NAME"
FROM EMPLOYEES WHERE LAST_NAME LIKE '%n';


SELECT EMPLOYEE_ID, HIRE_DATE, 
       MONTHS_BETWEEN(SYSDATE, HIRE_DATE) "Number Of Months Employed",
       ADD_MONTHS(HIRE_DATE, 6) "Review Date Six-Month ",
       NEXT_DAY(HIRE_DATE, 'VIERNES') "Next Day Friday hire Date",
       LAST_DAY(HIRE_DATE) "Last Day Hire Date"
FROM EMPLOYEES WHERE MONTHS_BETWEEN(SYSDATE, HIRE_DATE) > 150;


SELECT EMPLOYEE_ID, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '%02'; 

-- PRACTICE 09, ACTIVITY 05.
SELECT SYSDATE "DATE" FROM DUAL;

SELECT EMPLOYEE_ID, LAST_NAME, SALARY,
       ROUND(SALARY + (SALARY * 0.155), 0) "NEW SALARY" 
FROM EMPLOYEES;

SELECT EMPLOYEE_ID, LAST_NAME, SALARY,
       ROUND(SALARY + (SALARY * 0.155), 0) "NEW SALARY",
       ROUND((SALARY + (SALARY * 0.155)) - SALARY, 0) "INCREASE" 
FROM EMPLOYEES;

SELECT INITCAP(LAST_NAME) "LAST_NAME", LENGTH(LAST_NAME) "LENGTH OF LAST_NAME"
FROM EMPLOYEES  WHERE LAST_NAME LIKE 'A%' OR LAST_NAME LIKE 'J%' OR LAST_NAME LIKE 'M%'
ORDER BY LAST_NAME ASC;

SELECT INITCAP(LAST_NAME) AS "LAST_NAME", LENGTH(LAST_NAME) AS "LENGHT OF LAST_NAME"
FROM EMPLOYEES WHERE LAST_NAME LIKE UPPER('&LETTER%') ORDER BY LAST_NAME ASC;

SELECT LAST_NAME, ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) "MONTHS_WORKED"
FROM EMPLOYEES;

SELECT LAST_NAME, LPAD(SALARY, 15, '$') "SALARY" FROM EMPLOYEES; 

SELECT RPAD(LAST_NAME, 8) || ' ' || 
       RPAD(' ', SALARY/1000+1, '*') "EMPLOYEES_AND_THEIR_SALARIES" 
FROM EMPLOYEES ORDER BY SALARY DESC;

SELECT LAST_NAME, TRUNC(((SYSDATE - HIRE_DATE)/7), 0) TENURE
FROM EMPLOYEES WHERE DEPARTMENT_ID = 90 ORDER BY TENURE DESC;

-- PRACTICE 10, ACTIVITY 02.
SELECT TO_CHAR(TO_DATE('2000','YYYY'),
'MM/DD/YYYY') FROM dual;

-- PRACTICE 10, ACTIVITY 04.
SELECT FIRST_NAME, LAST_NAME, 
       TO_CHAR(HIRE_DATE, 'fmDay, "the" fmddth "of" fmMonth, Year.') "START_DATE"
FROM EMPLOYEES WHERE UPPER(TO_CHAR(HIRE_DATE, 'fmDay')) = 'LUNES';       

SELECT FIRST_NAME, LAST_NAME, LENGTH(FIRST_NAME), LENGTH(LAST_NAME), 
       CASE LENGTH(FIRST_NAME) WHEN LENGTH(LAST_NAME) THEN 'Same Length'
                               ELSE 'Different Length'
       END "NAME_LENGTHS"
FROM EMPLOYEES WHERE DEPARTMENT_ID = 100;  

SELECT * FROM LOCATIONS;

SELECT STATE_PROVINCE,
       DECODE(STATE_PROVINCE,
              'Washington', 'Headquarters', 
              'Texas', 'Oil Wells',
              'California', CITY,
              'New Jersey', STREET_ADDRESS,
              'NOT INFO') "LOCATION_INFO"
FROM LOCATIONS WHERE COUNTRY_ID = 'US';

-- PRACTICE 10, ACTIVITY 05.
SELECT LAST_NAME || q'[ earns $]' || SALARY || q'[ monthly but wants $]' 
       || SALARY * 3 AS "Dream Salary" 
FROM EMPLOYEES;

SELECT LAST_NAME, HIRE_DATE,
       TO_CHAR((NEXT_DAY(HIRE_DATE, 'Lunes')),'fmDay, "the" fmddspth "of" fmMonth, yyyy')
       AS REVIEW 
FROM EMPLOYEES;     

SELECT LAST_NAME, HIRE_DATE, TO_CHAR(HIRE_DATE,'DAY') "DAY"
FROM EMPLOYEES ORDER BY TO_CHAR(HIRE_DATE - 7, 'D') ASC;


SELECT LAST_NAME, NVL(TO_CHAR(COMMISSION_PCT), 'No Commission') COMM
FROM EMPLOYEES;

SELECT JOB_ID, DECODE(JOB_ID, 
       'AD_PRES', 'A',
       'ST_MAN', 'B',
       'IT_PROG', 'C',
       'SA_REP', 'D',
       'ST_CLERK', 'E',
       0) AS GRADE  
FROM EMPLOYEES;

SELECT JOB_ID, CASE JOB_ID
       WHEN 'ST_CLERK' THEN 'E'
       WHEN 'SA_REP' THEN 'D'
       WHEN 'IT_PROG' THEN 'C'
       WHEN 'ST_MAN' THEN 'B'
       WHEN 'AD_PRES' THEN 'A'
ELSE '0' END AS GRADE
FROM EMPLOYEES;

-- PRACTICE 11, ACTIVITY 04:
SELECT ROUND(AVG(LENGTH(COUNTRY_NAME))) "AVERAGE_COUNTRY_NAME_LENGTH"
FROM COUNTRIES;

SELECT TO_CHAR(END_DATE, 'YYYY') "Quitting Year", JOB_ID,
	COUNT(*) "Number of Employees"
FROM JOB_HISTORY
GROUP BY TO_CHAR(END_DATE, 'YYYY'), JOB_ID
ORDER BY COUNT(*) DESC;

SELECT TO_CHAR(HIRE_DATE, 'DAY'), COUNT(*)
FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE, 'DAY')
HAVING COUNT(*) >= 15 ORDER BY COUNT(*);

-- PRACTICE 11, ACTIVITY 05:
SELECT ROUND(MAX(SALARY),0) "Maximum",
       ROUND(MIN(SALARY),0) "Minimum",
       ROUND(SUM(SALARY),0) "Sum",
       ROUND(AVG(SALARY),0) "Average"
FROM EMPLOYEES;

SELECT JOB_ID, ROUND(MAX(SALARY),0) "Maximum",
       ROUND(MIN(SALARY),0) "Minimum",
       ROUND(SUM(SALARY),0) "Sum",
       ROUND(AVG(SALARY),0) "Average"
FROM EMPLOYEES
GROUP BY JOB_ID;

SELECT JOB_ID, COUNT(*) FROM EMPLOYEES
GROUP BY JOB_ID;

SELECT JOB_ID, COUNT(*) FROM EMPLOYEES
WHERE JOB_ID = '&JOB_TITLE' GROUP BY JOB_ID;

SELECT COUNT(DISTINCT MANAGER_ID) "Number of Managers"
FROM EMPLOYEES;

SELECT MAX(SALARY) - MIN(SALARY) DIFFERENCE
FROM EMPLOYEES;

SELECT MANAGER_ID, MIN(SALARY) "Salary Minimum"
FROM EMPLOYEES WHERE MANAGER_ID IS NOT NULL
GROUP BY MANAGER_ID HAVING MIN(SALARY) > 6000
ORDER BY MIN(SALARY) DESC;

SELECT COUNT(*) AS TOTAL,
       SUM(DECODE(TO_CHAR(HIRE_DATE, 'YYYY'),2002,1,0)) "2002",
       SUM(DECODE(TO_CHAR(HIRE_DATE, 'YYYY'),2003,1,0)) "2003",
       SUM(DECODE(TO_CHAR(HIRE_DATE, 'YYYY'),2004,1,0)) "2004",
       SUM(DECODE(TO_CHAR(HIRE_DATE, 'YYYY'),2005,1,0)) "2005"
FROM EMPLOYEES; 

SELECT JOB_ID,
       SUM(DECODE(DEPARTMENT_ID , 20, SALARY)) "Department 20",
       SUM(DECODE(DEPARTMENT_ID , 50, SALARY)) "Department 50",
       SUM(DECODE(DEPARTMENT_ID , 80, SALARY)) "Department 80",
       SUM(DECODE(DEPARTMENT_ID , 90, SALARY)) "Department 90",
       SUM(salary) "Total"
FROM EMPLOYEES GROUP BY JOB_ID;

-- PRACTICE 12, ACTIVITY 04:
SELECT EMPLOYEE_ID,
       JOB_ID,
       DEPARTMENT_ID,
       EMP.LAST_NAME,
       EMP.HIRE_DATE,
       JH.END_DATE
FROM EMPLOYEES EMP NATURAL JOIN JOB_HISTORY JH;       

SELECT E.FIRST_NAME || ' ' || E.LAST_NAME || 
       ' is manager of the ' || D.DEPARTMENT_NAME || 
       ' department.' AS "Managers"
FROM EMPLOYEES E JOIN DEPARTMENTS D  ON D.MANAGER_ID = E.EMPLOYEE_ID;

SELECT E.LAST_NAME "EMPLOYEE", E.EMPLOYEE_ID, 
       E.MANAGER_ID, M.LAST_NAME "MANAGER",
       E.DEPARTMENT_ID
FROM EMPLOYEES E JOIN EMPLOYEES M 
ON (M.EMPLOYEE_ID = E.MANAGER_ID AND E.DEPARTMENT_ID IN (10,20 ,30))
ORDER BY DEPARTMENT_ID;

SELECT LOCATION_ID, STREET_ADDRESS, 
       CITY, STATE_PROVINCE, COUNTRY_NAME 
FROM LOCATIONS NATURAL JOIN COUNTRIES;

SELECT E.LAST_NAME, DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E JOIN DEPARTMENTS D USING(DEPARTMENT_ID);

SELECT E.LAST_NAME, E.JOB_ID, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID)
JOIN LOCATIONS L
ON (D.LOCATION_ID = L.LOCATION_ID)
WHERE LOWER(L.CITY) = 'toronto'; 

SELECT E.LAST_NAME EMPLOYEE, E.EMPLOYEE_ID "EMP#",
       M.LAST_NAME MANAGER, M.EMPLOYEE_ID "MGR#"
FROM EMPLOYEES E JOIN EMPLOYEES M
ON (E.MANAGER_ID = M.EMPLOYEE_ID); 

SELECT E.DEPARTMENT_ID DEPARTMENT, E.LAST_NAME EMPLOYEE,        
       C.LAST_NAME COLLEAGUE FROM EMPLOYEES E JOIN EMPLOYEES C 
ON (E.DEPARTMENT_ID = C.DEPARTMENT_ID) 
WHERE  E.EMPLOYEE_ID <> C.EMPLOYEE_ID  
ORDER BY E.DEPARTMENT_ID, E.LAST_NAME, C.LAST_NAME;

CREATE TABLE JOB_GRADES (
     GRADE CHAR(1),
     LOWEST_SAL NUMBER(8,2) NOT NULL,
     HIGHEST_SAL NUMBER(8,2) NOT NULL
);

ALTER TABLE JOB_GRADES ADD CONSTRAINT 
job_grades_grade_pk PRIMARY KEY (GRADE);

INSERT INTO JOB_GRADES VALUES ('A', 1000, 2999);
INSERT INTO JOB_GRADES VALUES ('B', 3000, 5999);
INSERT INTO JOB_GRADES VALUES ('C', 6000, 9999);
INSERT INTO JOB_GRADES VALUES ('D', 10000, 14999);
INSERT INTO JOB_GRADES VALUES ('E', 15000, 24999);
INSERT INTO JOB_GRADES VALUES ('F', 25000, 40000);

COMMIT;

SELECT E.LAST_NAME, E.JOB_ID, D.DEPARTMENT_NAME,        
       E.SALARY, JG.GRADE GRADE_LEVEL 
FROM EMPLOYEES E JOIN DEPARTMENTS D 
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID) JOIN JOB_GRADES JG 
ON (E.SALARY BETWEEN JG.LOWEST_SAL AND JG.HIGHEST_SAL)
ORDER BY E.SALARY DESC;

SELECT E.LAST_NAME, E.HIRE_DATE
FROM EMPLOYEES E JOIN EMPLOYEES DAV
ON (DAV.LAST_NAME = 'Davies')
WHERE DAV.HIRE_DATE < E.HIRE_DATE
ORDER BY E.LAST_NAME;

SELECT E.LAST_NAME, E.LAST_NAME, M.HIRE_DATE, M.HIRE_DATE 
FROM EMPLOYEES E JOIN EMPLOYEES M ON (E.MANAGER_ID = M.EMPLOYEE_ID) 
WHERE E.HIRE_DATE <  M.HIRE_DATE;

SELECT D.DEPARTMENT_NAME, D.DEPARTMENT_ID
FROM DEPARTMENTS D LEFT OUTER JOIN EMPLOYEES E
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
WHERE E.DEPARTMENT_ID IS NULL;

SELECT COUNT(*) "NUMBER OF EMPLOYEES" FROM EMPLOYEES;

SELECT COUNT(*) "NUMBER OF DEPARTMENTS" FROM DEPARTMENTS;

SELECT COUNT(*) "Cartesian product"
FROM EMPLOYEES CROSS JOIN DEPARTMENTS;

-- PRACTICE 12, ACTIVITY 05:
SELECT LOCATION_ID, STREET_ADDRESS, 
       CITY, STATE_PROVINCE, COUNTRY_NAME 
FROM LOCATIONS NATURAL JOIN COUNTRIES
ORDER BY LOCATION_ID;

SELECT E.LAST_NAME, DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E JOIN DEPARTMENTS D USING(DEPARTMENT_ID);

SELECT E.LAST_NAME, E.JOB_ID, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID)
JOIN LOCATIONS L
ON (D.LOCATION_ID = L.LOCATION_ID)
WHERE LOWER(L.CITY) = 'toronto'; 

SELECT E.LAST_NAME EMPLOYEE, E.EMPLOYEE_ID "EMP#",
       M.LAST_NAME MANAGER, M.EMPLOYEE_ID "MGR#"
FROM EMPLOYEES E JOIN EMPLOYEES M
ON (E.MANAGER_ID = M.EMPLOYEE_ID)
ORDER BY E.EMPLOYEE_ID; 

SELECT E.LAST_NAME EMPLOYEE, E.EMPLOYEE_ID "EMP#",
       M.LAST_NAME MANAGER, M.EMPLOYEE_ID "MGR#"
FROM EMPLOYEES E LEFT OUTER JOIN EMPLOYEES M
ON (E.MANAGER_ID = M.EMPLOYEE_ID); 

SELECT E.DEPARTMENT_ID DEPARTMENT, E.LAST_NAME EMPLOYEE,        
       C.LAST_NAME COLLEAGUE FROM EMPLOYEES E JOIN EMPLOYEES C 
ON (E.DEPARTMENT_ID = C.DEPARTMENT_ID) 
WHERE  E.EMPLOYEE_ID <> C.EMPLOYEE_ID  
ORDER BY E.DEPARTMENT_ID, E.LAST_NAME;

DESCRIBE JOB_GRADES;

SELECT E.LAST_NAME, E.JOB_ID, D.DEPARTMENT_NAME,        
       E.SALARY, JG.GRADE GRADE_LEVEL 
FROM EMPLOYEES E JOIN DEPARTMENTS D 
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID) JOIN JOB_GRADES JG 
ON (E.SALARY BETWEEN JG.LOWEST_SAL AND JG.HIGHEST_SAL)
ORDER BY E.SALARY;

SELECT E.LAST_NAME, E.HIRE_DATE
FROM EMPLOYEES E JOIN EMPLOYEES DAV
ON (DAV.LAST_NAME = 'Davies')
WHERE DAV.HIRE_DATE < E.HIRE_DATE
ORDER BY E.LAST_NAME;

SELECT E.LAST_NAME, E.HIRE_DATE, M.LAST_NAME, M.HIRE_DATE 
FROM EMPLOYEES E JOIN EMPLOYEES M ON (E.MANAGER_ID = M.EMPLOYEE_ID) 
WHERE E.HIRE_DATE <  M.HIRE_DATE;

-- PRACTICE 13, ACTIVITY 03:
SELECT SYSDATE TODAY, (SELECT COUNT(*) FROM DEPARTMENTS) DEPT_COUNT, 
       (SELECT COUNT(*) FROM EMPLOYEES) EMP_COUNT
FROM DUAL;

SELECT LAST_NAME FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (SELECT MANAGER_ID FROM EMPLOYEES);

SELECT MAX(SALARY), COUNTRY_ID FROM (SELECT SALARY, DEPARTMENT_ID
LOCATION_ID, COUNTRY_ID FROM EMPLOYEES NATURAL JOIN DEPARTMENTS 
NATURAL JOIN LOCATIONS)
GROUP BY COUNTRY_ID;

SELECT LAST_NAME FROM EMPLOYEES 
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS
WHERE LOCATION_ID IN (SELECT LOCATION_ID FROM LOCATIONS
WHERE COUNTRY_ID = (SELECT COUNTRY_ID FROM COUNTRIES
WHERE COUNTRY_NAME = 'United Kingdom')));

SELECT LAST_NAME FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS
WHERE DEPARTMENT_NAME LIKE 'IT%') AND SALARY > (SELECT AVG(SALARY) 
FROM EMPLOYEES); 

SELECT LAST_NAME FROM EMPLOYEES
WHERE SALARY > (SELECT SALARY FROM EMPLOYEES
WHERE LAST_NAME = 'Tobias') ORDER BY LAST_NAME;

SELECT LAST_NAME FROM EMPLOYEES 
WHERE SALARY > ALL (SELECT SALARY FROM EMPLOYEES
WHERE LAST_NAME = 'Taylor') ORDER BY LAST_NAME;

SELECT LAST_NAME FROM EMPLOYEES 
WHERE SALARY > (SELECT MAX(SALARY) FROM EMPLOYEES
WHERE LAST_NAME = 'Taylor') ORDER BY LAST_NAME;

SELECT E.LAST_NAME, D.DEPARTMENT_NAME FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE D.DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM
DEPARTMENTS WHERE UPPER(DEPARTMENT_NAME) LIKE 
UPPER('%&DEPARTMENT_NAME%'));

-- PRACTICE 13, ACTIVITY 04:
SELECT LAST_NAME, HIRE_DATE
FROM EMPLOYEES WHERE DEPARTMENT_ID = (SELECT 
DEPARTMENT_ID FROM EMPLOYEES 
WHERE UPPER(LAST_NAME) = UPPER('&&EMPLOYEE_NAME'))
AND LAST_NAME <> '&EMPLOYEE_NAME';

SELECT EMPLOYEE_ID, LAST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES)
ORDER BY SALARY;

SELECT EMPLOYEE_ID, LAST_NAME FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID 
FROM EMPLOYEES WHERE LAST_NAME LIKE '%u%');

SELECT LAST_NAME, DEPARTMENT_ID, JOB_ID FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS
WHERE LOCATION_ID = 1700); 

SELECT LAST_NAME, DEPARTMENT_ID, JOB_ID FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS
WHERE LOCATION_ID = &LOCATION_ID); 

SELECT LAST_NAME, SALARY FROM EMPLOYEES
WHERE MANAGER_ID IN (SELECT EMPLOYEE_ID
FROM EMPLOYEES WHERE LAST_NAME = 'King');

SELECT DEPARTMENT_ID, LAST_NAME, JOB_ID FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS
WHERE DEPARTMENT_NAME = 'Executive'); 

SELECT EMPLOYEE_ID, LAST_NAME, SALARY FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM EMPLOYEES
WHERE LAST_NAME LIKE '%u%') AND SALARY > (SELECT AVG(SALARY)
FROM EMPLOYEES);

-- PRACTICE 14, ACTIVITY 03:
SELECT REGION_NAME FROM REGIONS;

SELECT REGION_NAME FROM REGIONS
UNION
SELECT REGION_NAME FROM REGIONS;

SELECT REGION_NAME FROM REGIONS
UNION ALL
SELECT REGION_NAME FROM REGIONS;

SELECT REGION_NAME FROM REGIONS
INTERSECT
SELECT REGION_NAME FROM REGIONS;

SELECT REGION_NAME FROM REGIONS
MINUS
SELECT REGION_NAME FROM REGIONS;

SELECT DEPARTMENT_ID, COUNT(*)
FROM EMPLOYEES WHERE DEPARTMENT_ID IN (20,30,40)
GROUP BY DEPARTMENT_ID;

SELECT DEPARTMENT_ID, COUNT(*)
FROM EMPLOYEES WHERE DEPARTMENT_ID IN (20,30,40)
GROUP BY DEPARTMENT_ID
UNION
SELECT DEPARTMENT_ID, COUNT(*)
FROM EMPLOYEES WHERE DEPARTMENT_ID IN (20,30,40)
GROUP BY DEPARTMENT_ID;

SELECT MANAGER_ID FROM EMPLOYEES WHERE DEPARTMENT_ID = 20
INTERSECT
SELECT MANAGER_ID FROM EMPLOYEES WHERE DEPARTMENT_ID = 30   
MINUS
SELECT MANAGER_ID FROM EMPLOYEES WHERE DEPARTMENT_ID = 40;

SELECT DEPARTMENT_ID, TO_NUMBER(NULL) MANAGER_ID, SUM(SALARY) FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
UNION
SELECT TO_NUMBER(NULL), MANAGER_ID, SUM(SALARY) FROM EMPLOYEES
GROUP BY MANAGER_ID
UNION ALL
SELECT TO_NUMBER(NULL), TO_NUMBER(NULL), SUM(SALARY) FROM EMPLOYEES;

SELECT EMPLOYEE_ID, LAST_NAME FROM EMPLOYEES
MINUS
SELECT EMPLOYEE_ID, TO_CHAR(NULL) FROM JOB_HISTORY;

SELECT EMPLOYEE_ID, 
       (SELECT J.JOB_TITLE FROM JOBS J WHERE 
       E.JOB_ID = J.JOB_ID) "JOB TITLE" FROM EMPLOYEES E
INTERSECT
SELECT EMPLOYEE_ID,
       (SELECT J2.JOB_TITLE FROM JOBS J2 WHERE
       J2.JOB_ID = JH.JOB_ID) "JOB TITLE" FROM JOB_HISTORY JH; 
           
UNDEFINE EMPLOYEE_ID;

SELECT (SELECT J.JOB_TITLE FROM JOBS J WHERE 
       E.JOB_ID = J.JOB_ID) "JOB TITLE" 
FROM EMPLOYEES E WHERE E.EMPLOYEE_ID = &&EMPLOYEE_ID
UNION
SELECT (SELECT J2.JOB_TITLE FROM JOBS J2 WHERE
       J2.JOB_ID = JH.JOB_ID) "JOB TITLE" 
FROM JOB_HISTORY JH WHERE JH.EMPLOYEE_ID = &EMPLOYEE_ID;

-- PRACTICE 14, ACTIVITY 04:
SELECT DEPARTMENT_ID
FROM DEPARTMENTS
MINUS
SELECT DEPARTMENT_ID
FROM EMPLOYEES
WHERE JOB_ID = 'ST_CLERK'; 

SELECT COUNTRY_ID, COUNTRY_NAME
FROM COUNTRIES
MINUS
SELECT COUNTRY_ID, COUNTRY_NAME
FROM COUNTRIES
NATURAL JOIN LOCATIONS
NATURAL JOIN DEPARTMENTS;

SELECT JOB_ID, DEPARTMENT_ID FROM EMPLOYEES 
WHERE DEPARTMENT_ID = 10
UNION
SELECT JOB_ID, DEPARTMENT_ID FROM EMPLOYEES
WHERE DEPARTMENT_ID = 50
UNION
SELECT JOB_ID, DEPARTMENT_ID FROM EMPLOYEES
WHERE DEPARTMENT_ID = 20;

SELECT EMPLOYEE_ID, JOB_ID
FROM EMPLOYEES
INTERSECT
SELECT EMPLOYEE_ID, JOB_ID
FROM JOB_HISTORY;

SELECT LAST_NAME, DEPARTMENT_ID, TO_CHAR(NULL)
FROM EMPLOYEES
UNION
SELECT TO_CHAR(NULL), DEPARTMENT_ID, DEPARTMENT_NAME
FROM DEPARTMENTS;

-- PRACTICE 15, ACTIVITY 03:
CREATE VIEW EMPLOYEES_VU AS 
SELECT EMPLOYEE_ID, LAST_NAME EMPLOYEE, DEPARTMENT_ID 
FROM EMPLOYEES;

SELECT * FROM EMPLOYEES_VU;

SELECT EMPLOYEE, DEPARTMENT_ID 
FROM EMPLOYEES_VU;

CREATE VIEW DEPT50 AS 
SELECT EMPLOYEE_ID EMPNO, LAST_NAME EMPLOYEE, 
       DEPARTMENT_ID DEPTNO 
FROM EMPLOYEES WHERE DEPARTMENT_ID = 50
WITH READ ONLY;

DESCRIBE DEPT50;

SELECT * FROM DEPT50;

UPDATE DEPT50 SET DEPTNO = 90
WHERE EMPNO = 102;

CREATE VIEW EMP_ANON_V AS 
SELECT HIRE_DATE, JOB_ID, SALARY,
       COMMISSION_PCT, DEPARTMENT_ID
FROM EMPLOYEES;

CREATE VIEW DEPT_ANON_V AS 
SELECT DEPARTMENT_ID, DEPARTMENT_NAME, 
       LOCATION_ID
FROM DEPARTMENTS;

CREATE VIEW DEPT_SUM_V AS
SELECT D.DEPARTMENT_ID, COUNT(E.HIRE_DATE) STAFF,
       SUM(SALARY) SALARIES, (SELECT DEPARTMENT_NAME FROM DEPT_ANON_V D2 
WHERE D2.DEPARTMENT_ID = D.DEPARTMENT_ID) DEPARTMENT_NAME
FROM EMP_ANON_V E JOIN DEPT_ANON_V D 
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID)  GROUP BY D.DEPARTMENT_ID;

SELECT * FROM DEPT_SUM_V;

INSERT INTO DEPT_ANON_V VALUES(99,'Temp Dept',1800);
INSERT INTO EMP_ANON_V VALUES(sysdate,'AC_MGR',10000,0,99);

UPDATE EMP_ANON_V SET SALARY = SALARY * 1.1;

ROLLBACK;

CREATE VIEW AVG_SAL_PER_DEPPT AS
SELECT AVG(SALARY) AVG_SAL FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID;

SELECT MAX(AVG_SAL) FROM AVG_SAL_PER_DEPPT;

SELECT MAX(SALARIES/STAFF) FROM DEPT_SUM_V;

CREATE TABLE DEPARTMENTS1 (
       NAME CHAR(20) PRIMARY KEY,
       OFFICE CHAR(50)
);

CREATE TABLE EMPLOYEES1 (
       ID SMALLINT PRIMARY KEY,
       SURNAME CHAR(40),
       NAME CHAR(20),
       SALARY INTEGER,
       DEP CHAR(20) REFERENCES DEPARTMENTS1
);

INSERT INTO DEPARTMENTS1 VALUES('Sales','Logistic');
INSERT INTO DEPARTMENTS1 VALUES('Marketing','Director');
INSERT INTO DEPARTMENTS1 VALUES('Administration','General Administrator');
INSERT INTO DEPARTMENTS1 VALUES('Accounting','stationery');
INSERT INTO EMPLOYEES1 VALUES(1,'Torres','Juan',1500,'Sales');
INSERT INTO EMPLOYEES1 VALUES(2,'Rodriguez','Omar',1200,'Sales');
INSERT INTO EMPLOYEES1 VALUES(3,'Lopez','Juan',1550,'Marketing');
INSERT INTO EMPLOYEES1 VALUES(4,'Maria','Garcia',1100,'Accounting');

COMMIT;

CREATE VIEW EmpDepSales AS
SELECT SURNAME, NAME 
FROM EMPLOYEES1  WHERE DEP = 'Sales';

SELECT SURNAME AS LAST_NAME, NAME AS FIRST_NAME 
FROM EmpDepSales ORDER BY 1,2 ASC;

CREATE OR REPLACE VIEW EmpDepSales AS
SELECT SURNAME, NAME, SALARY 
FROM EMPLOYEES1  WHERE DEP = 'Sales';

CREATE VIEW DEP_SALARIES AS
SELECT DEP, MIN(SALARY) minimum, MAX(SALARY) maximum,
AVG(SALARY) average FROM employees1 GROUP BY DEP;

SELECT * FROM DEP_SALARIES;

DESCRIBE EmpDepSales;
DESCRIBE DEP_SALARIES;

DROP VIEW EmpDepSales;
DROP VIEW DEP_SALARIES;

CREATE SYNONYM EMP FOR EMP_ANON_V;
CREATE SYNONYM DEPT FOR DEPT_ANON_V;
CREATE SYNONYM D_SUM FOR DEPT_SUM_V;

SELECT * FROM EMP;
SELECT * FROM DEPT;
SELECT * FROM D_SUM;

DROP VIEW EMP;
DROP VIEW DEPT;

CREATE OR REPLACE VIEW SUM_V AS
SELECT D.DEPARTMENT_ID, COUNT(E.HIRE_DATE) AS STAFF,
SUM(SALARY) AS SALARIES, (SELECT DEPARTMENT_NAME FROM DEPT_ANON_V D2 
WHERE D2.department_id = D.department_id) AS DEPARTMENT_NAME
FROM EMP_ANON_V E JOIN DEPT_ANON_V D 
ON (E.department_id = D.department_id)  GROUP BY D.DEPARTMENT_ID;

ALTER VIEW SUM_V COMPILE;

DROP VIEW DEPT_SUM_V;

SELECT * FROM D_SUM;

ALTER SYNONYM D_SUM COMPILE;

DROP SYNONYM EMP;
DROP SYNONYM DEPT;
DROP SYNONYM D_SUM;
