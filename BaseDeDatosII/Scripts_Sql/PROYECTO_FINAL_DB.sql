-- ACTIVIDAD: PROYECTO_FINAL.
-- MATERIA: SISTEMAS DE BASE DE DATOS II.
-- NOMBRE: CRISITAN OMAR ALVARADO RODRIGUEZ.
-- GRUPO: 5"B".

-- TABLA DE CATEGORIA DEL ARTISTA.
CREATE TABLE CATEGORIA_ARTISTA_COAR (
    ID_CAT_ARTISTA NUMBER(6) CONSTRAINT CAT_ARTISTA_COAR_PK PRIMARY KEY,
    NOMBRE_CAT VARCHAR2(75) CONSTRAINT CAT_ART_COAR_NOMBRE_NN NOT NULL 
);

SELECT * FROM CATEGORIA_ARTISTA_COAR;

-- TABLA ARTISTA
CREATE TABLE ARTISTA_COAR (
    ID_ARTISTA NUMBER(6) CONSTRAINT ARTISTA_COAR_PK PRIMARY KEY,
    ID_CAT_ARTISTA NUMBER(6),
    NOMBRE VARCHAR2(35) CONSTRAINT ARTISTA_COAR_NOMBRE_NN NOT NULL,
    APATERNO VARCHAR2(45) CONSTRAINT ARTISTA_COAR_APA_NN NOT NULL,
    AMATERNO VARCHAR2(45),
    FECHA_NACIMIENTO DATE CONSTRAINT ARTISTA_COAR_FECHA_NAC_NN NOT NULL,
    GENERO VARCHAR2(30) CONSTRAINT ARTISTA_COAR_GEN_NN NOT NULL,
    NACIONALIDAD VARCHAR2(45) CONSTRAINT ARTISTA_COAR_NACI_NN NOT NULL,
    CONSTRAINT CAT_ART_ART_COAR_FK FOREIGN KEY (ID_CAT_ARTISTA)
    REFERENCES CATEGORIA_ARTISTA_COAR (ID_CAT_ARTISTA) 
);

SELECT * FROM ARTISTA_COAR;

-- TABLE DE LAS NOTICIAS DE LA GUIRA DEL ARTISTA.
CREATE TABLE ARTISTA_NOTICIA_TOUR_COAR (
    ID_NOTICIA_TOUR NUMBER(6) CONSTRAINT ART_NOT_TOUR_COAR_PK PRIMARY KEY,
    ID_ARTISTA NUMBER(6),
    FECHA_INICIO_PUBLICACION DATE CONSTRAINT ART_NOT_T_COAR_F_I_P_NN NOT NULL,
    FECHA_FIN_PUBLICACION DATE CONSTRAINT ART_NOT_T_COAR_F_F_P_NN NOT NULL,
    DESCRIPCION VARCHAR2(75) CONSTRAINT ART_NOT_T_COAR_DES_COAR_NN NOT NULL,
    URL_LINK VARCHAR2(40) CONSTRAINT ART_NOT_TOUR_COAR_URL_NN NOT NULL,
    CONSTRAINT ART_ART_NOT_TOUR_COAR_FK FOREIGN KEY (ID_ARTISTA)
    REFERENCES ARTISTA_COAR (ID_ARTISTA)
);

SELECT * FROM ARTISTA_NOTICIA_TOUR_COAR;

-- TABLA DE LA CATEGORIA DEL EVENTO
CREATE TABLE CATEGORIA_EVENTO_COAR (
    ID_CAT_EVENTO NUMBER(6) CONSTRAINT CAT_EVENTO_COAR_PK PRIMARY KEY,
    NOMBRE_CAT_EVENTO VARCHAR2(45) CONSTRAINT CAT_EVE_COAR_NOM_NN NOT NULL
);

SELECT * FROM CATEGORIA_EVENTO_COAR;

-- TABLA UBICACION_COAR
CREATE TABLE UBICACION_COAR (
    ID_UBICACION NUMBER(6) CONSTRAINT UBICACION_COAR_PK PRIMARY KEY,
    DIRECCION VARCHAR2(75) CONSTRAINT UBI_COAR_DIRE_NN NOT NULL,
    CIUDAD VARCHAR2(45) CONSTRAINT UBI_COAR_CIUDAD_NN NOT NULL,
    CODIGO_POSTAL VARCHAR2(15) CONSTRAINT UBI_COAR_POST_COD_NN NOT NULL,
    ESTADO VARCHAR2(45) CONSTRAINT UBI_COAR_ESTADO_NN NOT NULL,
    PAIS VARCHAR2(50) CONSTRAINT UBI_COAR_PAIS_NN NOT NULL
);

SELECT * FROM UBICACION_COAR;

-- TABLA LUGAR_COAR
CREATE TABLE LUGAR_COAR (
    ID_LUGAR NUMBER(6) CONSTRAINT LUGAR_COAR_PK PRIMARY KEY,
    ID_UBICACION NUMBER(6),
    NOMBRE_LUGAR VARCHAR2(75) CONSTRAINT LUGAR_COAR_NOMBRE_NN NOT NULL,
    CAPACIDAD_LUGAR NUMBER(6) CONSTRAINT LUGAR_COAR_CAP_NN NOT NULL,
    CONSTRAINT UBI_COAR_LUGAR_COAR_FK FOREIGN KEY (ID_UBICACION)
    REFERENCES UBICACION_COAR (ID_UBICACION)  
);

SELECT * FROM LUGAR_COAR;

-- TABLA DIRECCION_LUGAR_COAR
CREATE TABLE DIRECCION_LUGAR_COAR (
    ID_DIRECCION NUMBER(6) CONSTRAINT DIRE_LUGAR_COAR_PK PRIMARY KEY,
    ID_LUGAR NUMBER(6),
    DIRECCION VARCHAR2(75) CONSTRAINT DIRE_LUGAR_COAR_DIRE_NN NOT NULL,
    CONSTRAINT DIRE_LUGAR_COAR_FK FOREIGN KEY (ID_LUGAR) REFERENCES
    LUGAR_COAR (ID_LUGAR)
);

SELECT * FROM DIRECCION_LUGAR_COAR;

-- TABLA CLIENTE_COAR
CREATE TABLE CLIENTE_COAR (
    ID_CLIENTE NUMBER(6) CONSTRAINT CLIENTE_COAR_PK PRIMARY KEY,
    ID_UBICACION NUMBER(6),
    NOMBRE VARCHAR2(35) CONSTRAINT CLI_COAR_NOMBRE_NN NOT NULL,
    APATERNO VARCHAR2(45) CONSTRAINT CLI_COAR_APA_NN NOT NULL,
    AMATERNO VARCHAR2(45),
    GENERO VARCHAR2(30) CONSTRAINT CLI_COAR_GEN_NN NOT NULL,
    EDAD NUMBER(2) CONSTRAINT CLI_COAR_EDAD_NN NOT NULL,
    EMAIL VARCHAR2(75) CONSTRAINT CLI_COAR_EMAIL_UK UNIQUE,
    PASSWORD VARCHAR2(75) CONSTRAINT CLI_COAR_PASS_NN NOT NULL,
    TIPO_TARJETA_CREDITO VARCHAR2(45) CONSTRAINT CLI_COAR_TIPO_TAR_CRE_NN NOT NULL,
    NUMERO_TARJETA_CREDITO VARCHAR2(45) CONSTRAINT CLI_COAR_NUM_TAR_CRE_NN NOT NULL,
    FECHA_VENCIMIENTO_TARJETA DATE CONSTRAINT CLI_COAR_FECHA_VEN_TAR_NN NOT NULL,
    CONSTRAINT UBI_COAR_CLI_COAR_FK FOREIGN KEY (ID_UBICACION) REFERENCES
    UBICACION_COAR (ID_UBICACION)
);

-- TABLE EVENTO_COAR
CREATE TABLE EVENTO_COAR (
    ID_EVENTO NUMBER(6) CONSTRAINT EVENTO_COAR_PK PRIMARY KEY,
    ID_CAT_EVENTO NUMBER(6),
    ID_ARTISTA NUMBER(6),
    ID_LUGAR NUMBER(6),
    NOMBRE_EVENTO VARCHAR2(75) CONSTRAINT EVE_COAR_NOM_EVE_NN NOT NULL,
    FECHA_HORA_INICIO DATE CONSTRAINT EVE_COAR_F_HORA_INI_NN NOT NULL,
    FECHA_HORA_FIN DATE CONSTRAINT EVE_COAR_F_HORA_FIN_NN NOT NULL,
    FECHA_VENTA_BOLETOS DATE CONSTRAINT EVE_COAR_FECHA_VEN_BOL_NN NOT NULL,
    CONSTRAINT CAT_EVE_COAR_EVE_COAR_FK FOREIGN KEY (ID_CAT_EVENTO)
    REFERENCES CATEGORIA_EVENTO_COAR (ID_CAT_EVENTO),
    CONSTRAINT ART_COAR_EVE_COAR_FK FOREIGN KEY (ID_ARTISTA) REFERENCES
    ARTISTA_COAR (ID_ARTISTA),
    CONSTRAINT LUG_COAR_EVE_COAR FOREIGN KEY (ID_LUGAR) REFERENCES
    LUGAR_COAR (ID_LUGAR) 
);

-- TABLA CLINTE_ORDEN_COAR
CREATE TABLE CLIENTE_ORDEN_COAR (
    ID_ORDEN NUMBER(6) CONSTRAINT CLI_ORDEN_COAR_PK PRIMARY KEY,
    ID_EVENTO NUMBER(6),
    ID_CLIENTE NUMBER(6),
    ESTATUS VARCHAR2(45) CONSTRAINT CLI_ORD_COAR_EST_NN NOT NULL,
    FECHA DATE CONSTRAINT CLI_ORD_COAR_FECHA_NN NOT NULL,
    CONSTRAINT EVE_COAR_CLI_ORD_COAR_FK FOREIGN KEY (ID_EVENTO)
    REFERENCES EVENTO_COAR (ID_EVENTO),
    CONSTRAINT CLI_ORD_COAR_CLI_COAR_FK FOREIGN KEY (ID_CLIENTE)
    REFERENCES CLIENTE_COAR (ID_CLIENTE)
);

SELECT * FROM CLIENTE_ORDEN_COAR;

-- TABLA FILA_LUGAR_COAR
CREATE TABLE FILA_LUGAR_COAR (
    ID_LUGAR NUMBER(6),
    NUMERO_FILA NUMBER(5),
    ZONA VARCHAR2(45) CONSTRAINT FILA_LU_COAR_ZONA_NN NOT NULL,
    CONSTRAINT FILA_LUGAR_COAR_PK PRIMARY KEY (ID_LUGAR, NUMERO_FILA),
    CONSTRAINT LUG_COAR_FILA_LUG_COAR_FK FOREIGN KEY (ID_LUGAR) REFERENCES
    LUGAR_COAR (ID_LUGAR)
);

-- TABLA RESERVACION_ASIENTO_COAR
CREATE TABLE RESERVACION_ASIENTO_COAR (
    ID_RESERVACION_ASIENTO NUMBER(6) CONSTRAINT RES_ASIENTO_COAR_PK PRIMARY KEY,
    ID_ORDEN NUMBER(6),
    ID_LUGAR NUMBER(6),
    NUMERO_FILA NUMBER(5),
    FECHA DATE CONSTRAINT RES_ASI_COAR_FECHA_NN NOT NULL,
    NUMERO_ASIENTO NUMBER(6) CONSTRAINT RES_ASI_COAR_NUM_ASI_NN NOT NULL,
    IVA NUMBER(3,2) CONSTRAINT RES_ASI_COAR_IVA_NN NOT NULL,
    SUBTOTAL NUMBER(8,2) CONSTRAINT RES_COAR_SUBT_NN NOT NULL,
    CONSTRAINT CLI_ORD_COAR_RES_ASI_COAR_FK FOREIGN KEY (ID_ORDEN)
    REFERENCES CLIENTE_ORDEN_COAR (ID_ORDEN),
    CONSTRAINT FILA_LUG_COAR_RES_ASI_COAR_FK FOREIGN KEY (ID_LUGAR, NUMERO_FILA)
    REFERENCES FILA_LUGAR_COAR (ID_LUGAR, NUMERO_FILA)
);  

-- SECUENCIAS PARA LAS TABLAS:
CREATE SEQUENCE CAT_ART_COAR_ID_CAT_ART_SEQ 
                INCREMENT BY 10
                START WITH 25
                MAXVALUE 500;

CREATE SEQUENCE ART_COAR_ID_ART_SEQ 
                INCREMENT BY 1
                START WITH 1
                MAXVALUE 100;

CREATE SEQUENCE ART_NOT_TOUR_COAR_ID_SEQ 
                INCREMENT BY 20
                START WITH 50
                MAXVALUE 1000;

CREATE SEQUENCE CAT_EVE_COAR_ID_SEQ 
                INCREMENT BY 5
                START WITH 5
                MAXVALUE 200;

CREATE SEQUENCE UBI_COAR_ID_UBI_SEQ 
                INCREMENT BY 100
                START WITH 1000;

CREATE SEQUENCE LUG_COAR_ID_LUG_SEQ 
                INCREMENT BY 50
                START WITH 100;

CREATE SEQUENCE DIRE_LUG_COAR_ID_DIRE_SEQ 
                INCREMENT BY 5
                START WITH 10;

CREATE SEQUENCE CLI_COAR_ID_CLI_SEQ 
                INCREMENT BY 1
                START WITH 1;

CREATE SEQUENCE EVEN_COAR_ID_EVEN_SEQ 
                INCREMENT BY 50
                START WITH 50;

CREATE SEQUENCE CLI_ORD_COAR_ID_ORD_SEQ 
                INCREMENT BY 5
                START WITH 30;

CREATE SEQUENCE FIL_LUG_COAR_NUM_FIL_SEQ 
                INCREMENT BY 1
                START WITH 1;

CREATE SEQUENCE RES_ASI_COAR_ID_RES_ASI_SEQ 
                INCREMENT BY 1
                START WITH 1;                

-- SINONIMOS PARA LAS TABLAS:
CREATE SYNONYM CA_COAR FOR CATEGORIA_ARTISTA_COAR;
CREATE SYNONYM A_COAR FOR ARTISTA_COAR;
CREATE SYNONYM ANT_COAR FOR ARTISTA_NOTICIA_TOUR_COAR;
CREATE SYNONYM CE_COAR FOR CATEGORIA_EVENTO_COAR;
CREATE SYNONYM U_COAR FOR UBICACION_COAR;
CREATE SYNONYM L_COAR FOR LUGAR_COAR;
CREATE SYNONYM DL_COAR FOR DIRECCION_LUGAR_COAR;
CREATE SYNONYM C_COAR FOR CLIENTE_COAR;
CREATE SYNONYM E_COAR FOR EVENTO_COAR;
CREATE SYNONYM CO_COAR FOR CLIENTE_ORDEN_COAR;
CREATE SYNONYM FL_COAR FOR FILA_LUGAR_COAR;
CREATE SYNONYM RA_COAR FOR RESERVACION_ASIENTO_COAR;

-- INDICES PARA LAS COLUMNAS DE LAS TABLAS:
CREATE INDEX CAT_ART_COAR_NOM_CAT_IDX ON CA_COAR (NOMBRE_CAT);
CREATE INDEX ART_COAR_ID_CT_ART_IDX ON A_COAR (ID_CAT_ARTISTA);
CREATE INDEX ART_COAR_NOM_COMPLETO_IDX ON A_COAR (NOMBRE, APATERNO, AMATERNO);
CREATE INDEX ART_COAR_GENERO_IDX ON A_COAR (GENERO);
CREATE INDEX ART_COAR_NACIONALIDAD ON A_COAR (NACIONALIDAD);
CREATE INDEX ART_NOT_TOUR_COAR_ID_ART_IDX ON ANT_COAR (ID_ARTISTA);
CREATE INDEX ART_NOT_TOUR_COAR_F_INI_P_IDX ON ANT_COAR (FECHA_INICIO_PUBLICACION);
CREATE INDEX ART_NOT_TOUR_COAR_F_FIN_P_IDX ON ANT_COAR (FECHA_FIN_PUBLICACION);
CREATE INDEX CAT_EVE_COAR_NOM_CAT_EVE_IDX ON CE_COAR (NOMBRE_CAT_EVENTO);
CREATE INDEX UBI_COAR_CIUDAD_IDX ON U_COAR (CIUDAD);
CREATE INDEX UBI_COAR_ESTADO_IDX ON U_COAR (ESTADO);
CREATE INDEX UBI_COAR_PAIS_IDX ON U_COAR (PAIS);
CREATE INDEX UBI_COAR_CUI_EST_PAIS_IDX ON U_COAR (CIUDAD, ESTADO, PAIS);
CREATE INDEX LUG_COAR_ID_UBI_IDX ON L_COAR (ID_UBICACION);
CREATE INDEX LUG_COAR_ID_UBI_IDX ON L_COAR (ID_UBICACION);
CREATE INDEX LUG_COAR_NOM_LUG_IDX ON L_COAR (NOMBRE_LUGAR);
CREATE INDEX DIR_LUG_COAR_ID_LUG_IDX ON DL_COAR (ID_LUGAR);
CREATE INDEX CLI_COAR_ID_UBI_IDX ON C_COAR (ID_UBICACION);
CREATE INDEX CLI_COAR_NOM_COMPLETO_IDX ON C_COAR (NOMBRE, APATERNO, AMATERNO);
CREATE INDEX CLI_COAR_GENERO_IDX ON C_COAR (GENERO);
CREATE INDEX CLI_COAR_TIPO_TAR_CRE_IDX ON C_COAR (TIPO_TARJETA_CREDITO);
CREATE INDEX EVE_COAR_ID_CAT_EVE_IDX ON E_COAR (ID_CAT_EVENTO);
CREATE INDEX EVE_COAR_ID_ART_IDX ON E_COAR (ID_ARTISTA);
CREATE INDEX EVE_COAR_ID_LUG_IDX ON E_COAR (ID_LUGAR);
CREATE INDEX EVE_COAR_NOM_EVE_IDX ON E_COAR (NOMBRE_EVENTO);
CREATE INDEX EVE_COAR_F_VENTA_BOL_IDX ON E_COAR (FECHA_VENTA_BOLETOS);
CREATE INDEX CLI_ORD_COAR_ID_EVE_IDX ON CO_COAR (ID_EVENTO);
CREATE INDEX CLI_ORD_COAR_ID_CLI_IDX ON CO_COAR (ID_CLIENTE);
CREATE INDEX RES_ASI_COAR_ID_ORD_IDX ON RA_COAR (ID_ORDEN);
CREATE INDEX RES_ASI_COAR_ID_LUG_IDX ON RA_COAR (ID_LUGAR);
CREATE INDEX RES_ASI_COAR_ID_NUM_FIL_IDX ON RA_COAR (NUMERO_FILA);

-- INSERTAR REGISTROS EN LA TABLA CATEGORIA_ARTISTA_COAR:
INSERT INTO CA_COAR VALUES (CAT_ART_COAR_ID_CAT_ART_SEQ.NEXTVAL, 'POP');
INSERT INTO CA_COAR VALUES (CAT_ART_COAR_ID_CAT_ART_SEQ.NEXTVAL, 'ROCK');
INSERT INTO CA_COAR VALUES (CAT_ART_COAR_ID_CAT_ART_SEQ.NEXTVAL, 'URBANO');
INSERT INTO CA_COAR VALUES (CAT_ART_COAR_ID_CAT_ART_SEQ.NEXTVAL, 'COMEDIA');
INSERT INTO CA_COAR VALUES (CAT_ART_COAR_ID_CAT_ART_SEQ.NEXTVAL, 'REGIONAL MEXICANO');

SELECT * FROM CA_COAR; 

-- INSERTAR REGISTROS EN LA TABLA ARTISTA_COAR:
INSERT INTO A_COAR VALUES (ART_COAR_ID_ART_SEQ.NEXTVAL,25,'Gloria','Trevi',NULL,
                           '15/02/1968', 'FEMENINO', 'MEXICANA'); 

INSERT INTO A_COAR VALUES (ART_COAR_ID_ART_SEQ.NEXTVAL,25,'Belinda','Peregrin','Schull',
                           '15/08/1989', 'FEMENINO', 'MEXICANA');                            


INSERT INTO A_COAR VALUES (ART_COAR_ID_ART_SEQ.NEXTVAL,65,'Christian', 'Nodal', NULL,
                           '11/01/1999', 'MASCULINO', 'MEXICANA');


INSERT INTO A_COAR VALUES (ART_COAR_ID_ART_SEQ.NEXTVAL,55,'Franco','Escamilla',NULL,
                           '29/04/1981', 'MASCULINO', 'MEXICANA');  

INSERT INTO A_COAR VALUES (ART_COAR_ID_ART_SEQ.NEXTVAL,45,'Bad', 'Bunny', NULL,
                           '10/03/1994', 'MASCULINO', 'PUERTO RICO');                                                    

SELECT * FROM A_COAR;

-- INSERTAR REGISTROS EN LA TABLA ARTISTA_NOTICIA_TOUR_COAR:
INSERT INTO ANT_COAR VALUES (ART_NOT_TOUR_COAR_ID_SEQ.NEXTVAL,1,'26/11/2022',
                            '30/11/2022', 'Isla Divina World Tour', 
                            'https://www.ticketmaster.com.mx');

INSERT INTO ANT_COAR VALUES (ART_NOT_TOUR_COAR_ID_SEQ.NEXTVAL,2,'29/11/2022',
                            '03/12/2022', 'Libertad: Bailala Tour', 
                            'https://www.ticketmaster.com.mx');

INSERT INTO ANT_COAR VALUES (ART_NOT_TOUR_COAR_ID_SEQ.NEXTVAL,2,'12/12/2022',
                            '16/12/2022', '2002s Pop Tour', 
                            'https://www.ticketmaster.com.mx');

INSERT INTO ANT_COAR VALUES (ART_NOT_TOUR_COAR_ID_SEQ.NEXTVAL,4,'14/12/2022',
                            '20/12/2022', 'Payaso World Tour', 
                            'https://www.ticketmaster.com.mx');

INSERT INTO ANT_COAR VALUES (ART_NOT_TOUR_COAR_ID_SEQ.NEXTVAL,5,'16/12/2022',
                            '25/12/2022', 'Bad Bunny Worlds Hottest Tour', 
                            'https://www.ticketmaster.com.mx');

SELECT * FROM ANT_COAR;

-- INSERTAR REGISTROS EN LA TABLA CATEGORIA_EVENTO_COAR:
INSERT INTO CE_COAR VALUES (CAT_EVE_COAR_ID_SEQ.NEXTVAL, 'CONCIERTO');
INSERT INTO CE_COAR VALUES (CAT_EVE_COAR_ID_SEQ.NEXTVAL, 'FAMILIAR');
INSERT INTO CE_COAR VALUES (CAT_EVE_COAR_ID_SEQ.NEXTVAL, 'OBRA DE TEATRO');
INSERT INTO CE_COAR VALUES (CAT_EVE_COAR_ID_SEQ.NEXTVAL, 'EXPOSICION DE ARTE');
INSERT INTO CE_COAR VALUES (CAT_EVE_COAR_ID_SEQ.NEXTVAL, 'SHOW DE COMEDIA');

SELECT * FROM CE_COAR;

-- INSERTAR REGISTROS EN LA TABLA UBICACION_COAR:
INSERT INTO U_COAR VALUES (UBI_COAR_ID_UBI_SEQ.NEXTVAL, 'Instalaciones de la Feria',
                           'ZACATECAS', '98066', 'ZACATECAS', 'MEXICO');  

INSERT INTO U_COAR VALUES (UBI_COAR_ID_UBI_SEQ.NEXTVAL, 'Avenida Francisco I.Madero 2500',
                           'MONTERREY', '98045', 'NUEVO LEON', 'MEXICO');  

INSERT INTO U_COAR VALUES (UBI_COAR_ID_UBI_SEQ.NEXTVAL, 'Dr.Lavista 189, Doctores, Cuauhtemoc',
                           'CDMX', '99862', 'CDMX', 'MEXICO');  

INSERT INTO U_COAR VALUES (UBI_COAR_ID_UBI_SEQ.NEXTVAL, 'Granjas Mexico, Iztacalco, 08400',
                           'CDMX', '98067', 'CDMX', 'MEXICO');  

INSERT INTO U_COAR VALUES (UBI_COAR_ID_UBI_SEQ.NEXTVAL, 'Av.Juarez S/N, Centro Historico',
                           'CDMX', '98023', 'CDMX', 'MEXICO');  

SELECT * FROM U_COAR;

-- INSERTAR REGISTROS EN LA TABLA LUGAR_COAR:
INSERT INTO L_COAR VALUES (LUG_COAR_ID_LUG_SEQ.NEXTVAL,1000,'MULTIFORO',22000);
INSERT INTO L_COAR VALUES (LUG_COAR_ID_LUG_SEQ.NEXTVAL,1100,'ARENA MONTERREY',17599);
INSERT INTO L_COAR VALUES (LUG_COAR_ID_LUG_SEQ.NEXTVAL,1200,'ARENA CDMX', 22300);
INSERT INTO L_COAR VALUES (LUG_COAR_ID_LUG_SEQ.NEXTVAL,1300,'PALACIO DE LOS DEPORTES',19824);
INSERT INTO L_COAR VALUES (LUG_COAR_ID_LUG_SEQ.NEXTVAL,1400,'PALACIO DE BELLAS ARTES',1590);

SELECT * FROM L_COAR;

-- INSERTAR REGISTROS EN LA TABLA DIRECCION_LUGAR_COAR:
INSERT INTO DL_COAR VALUES (DIRE_LUG_COAR_ID_DIRE_SEQ.NEXTVAL,100,
                            'Feria 25,Instalaciones de la Feria, Guadalupe,Zac');

INSERT INTO DL_COAR VALUES (DIRE_LUG_COAR_ID_DIRE_SEQ.NEXTVAL,150,
                            'Av.Francisco I.Madero 2500,Centro');

INSERT INTO DL_COAR VALUES (DIRE_LUG_COAR_ID_DIRE_SEQ.NEXTVAL,200,
                            'Dr.Lavista 189, Doctores, Cuauhtemoc');

INSERT INTO DL_COAR VALUES (DIRE_LUG_COAR_ID_DIRE_SEQ.NEXTVAL,250,
                            'Granjas Mexico, Iztacalco, 08400');

INSERT INTO DL_COAR VALUES (DIRE_LUG_COAR_ID_DIRE_SEQ.NEXTVAL,300,
                            'Av.Juarez S/N, Centro Historico');

SELECT * FROM DL_COAR;

-- INSERTAR REGISTROS EN LA TABLA CLIENTE_COAR:
INSERT INTO C_COAR VALUES (CLI_COAR_ID_CLI_SEQ.NEXTVAL,1000,'JUAN',
                           'PEREZ','LOPEZ','MASCULINO',20,'JU@GMAIL.COM',
                           'SJGDFU2378','DEBITO VISA','6755643598753645',
                           '20/12/2026'); 

INSERT INTO C_COAR VALUES (CLI_COAR_ID_CLI_SEQ.NEXTVAL,1100,'CARLOS',
                           'GARCIA','TORRES','MASCULINO',30,'CA@GMAIL.COM',
                           '12345F','MasterCard','9087534567824321',
                           '31/12/2025'); 

INSERT INTO C_COAR VALUES (CLI_COAR_ID_CLI_SEQ.NEXTVAL,1200,'ANA',
                           'DIAZ','FLORES','FEMENINO',28,'ANA@GMAIL.COM',
                           'EWEWR334','American Express','6383643598753645',
                           '31/12/2027'); 

INSERT INTO C_COAR VALUES (CLI_COAR_ID_CLI_SEQ.NEXTVAL,1300,'OMAR',
                           'ALVARADO','RODRIGUEZ','MASCULINO',57,'OMAR@GMAIL.COM',
                           'RKH3890','MasterCard','5546343598753646',
                           '31/12/2026'); 

INSERT INTO C_COAR VALUES (CLI_COAR_ID_CLI_SEQ.NEXTVAL,1400,'MARIA',
                           'HERNANDEZ','SANCHEZ','FEMENINO',43,'MARI@GMAIL.COM',
                           'MARI1234','VISA','6832643598753612',
                           '31/12/2026'); 

SELECT * FROM C_COAR;

-- INSERTAR REGISTROS EN LA TABLA EVENTO_COAR:
INSERT INTO E_COAR VALUES (EVEN_COAR_ID_EVEN_SEQ.NEXTVAL,35,3,100,
        'Feria De Zacatecas', TO_DATE('15/09/2022 8:30:00 PM', 'DD/MM/YYYY HH12:MI:SS AM'),
        TO_DATE('15/09/2022 11:30:00 PM', 'DD/MM/YYYY HH12:MI:SS AM'),
        '20/08/2022');

INSERT INTO E_COAR VALUES (EVEN_COAR_ID_EVEN_SEQ.NEXTVAL,35,1,100,
        'Feria De Zacatecas', TO_DATE('16/09/2022 8:30:00 PM', 'DD/MM/YYYY HH12:MI:SS AM'),
        TO_DATE('16/09/2022 11:30:00 PM', 'DD/MM/YYYY HH12:MI:SS AM'),
        '20/08/2022');

INSERT INTO E_COAR VALUES (EVEN_COAR_ID_EVEN_SEQ.NEXTVAL,35,5,100,
        'Feria De Zacatecas', TO_DATE('17/09/2022 7:30:00 PM', 'DD/MM/YYYY HH12:MI:SS AM'),
        TO_DATE('17/09/2022 12:30:00 PM', 'DD/MM/YYYY HH12:MI:SS AM'),
        '18/08/2022');

INSERT INTO E_COAR VALUES (EVEN_COAR_ID_EVEN_SEQ.NEXTVAL,55,4,150,
        'Festival De Navidiad', TO_DATE('25/12/2022 6:00:00 PM', 'DD/MM/YYYY HH12:MI:SS AM'),
        TO_DATE('25/12/2022 9:30:00 PM', 'DD/MM/YYYY HH12:MI:SS AM'),
        '15/11/2022');

INSERT INTO E_COAR VALUES (EVEN_COAR_ID_EVEN_SEQ.NEXTVAL,35,2,200,
        'Libertad: Bailala Tour', TO_DATE('30/11/2022 8:30:00 PM', 'DD/MM/YYYY HH12:MI:SS AM'),
        TO_DATE('30/11/2022 11:00:00 PM', 'DD/MM/YYYY HH12:MI:SS AM'),
        '10/11/2022');

SELECT * FROM E_COAR;

-- INSERTAR REGISTROS EN LA TABLA CLIENTE_ORDEN_COAR:
INSERT INTO CO_COAR VALUES (CLI_ORD_COAR_ID_ORD_SEQ.NEXTVAL,100,1,'APROBADO',
                            '13/09/2022');

INSERT INTO CO_COAR VALUES (CLI_ORD_COAR_ID_ORD_SEQ.NEXTVAL,150,1,'APROBADO',
                            '14/09/2022');

INSERT INTO CO_COAR VALUES (CLI_ORD_COAR_ID_ORD_SEQ.NEXTVAL,200,1,'APROBADO',
                            '14/09/2022');

INSERT INTO CO_COAR VALUES (CLI_ORD_COAR_ID_ORD_SEQ.NEXTVAL,200,1,'APROBADO',
                            '14/09/2022');

INSERT INTO CO_COAR VALUES (CLI_ORD_COAR_ID_ORD_SEQ.NEXTVAL,250,1,'EN ESPERA',
                            '26/11/2022');                            

SELECT * FROM CO_COAR;

-- INSERTAR REGISTROS EN LA TABLA FILA_LUGAR_COAR:
INSERT INTO FL_COAR VALUES (100,FIL_LUG_COAR_NUM_FIL_SEQ.NEXTVAL,'GENERAL');
INSERT INTO FL_COAR VALUES (100,FIL_LUG_COAR_NUM_FIL_SEQ.NEXTVAL,'DIAMANTE');
INSERT INTO FL_COAR VALUES (150,FIL_LUG_COAR_NUM_FIL_SEQ.NEXTVAL,'PREFERENTE');
INSERT INTO FL_COAR VALUES (150,FIL_LUG_COAR_NUM_FIL_SEQ.NEXTVAL,'VIP');
INSERT INTO FL_COAR VALUES (200,FIL_LUG_COAR_NUM_FIL_SEQ.NEXTVAL,'GENERAL');
INSERT INTO FL_COAR VALUES (200,FIL_LUG_COAR_NUM_FIL_SEQ.NEXTVAL,'PALCOS');
INSERT INTO FL_COAR VALUES (250,FIL_LUG_COAR_NUM_FIL_SEQ.NEXTVAL,'GENERAL');
INSERT INTO FL_COAR VALUES (250,FIL_LUG_COAR_NUM_FIL_SEQ.NEXTVAL,'DIAMANTE');
INSERT INTO FL_COAR VALUES (300,FIL_LUG_COAR_NUM_FIL_SEQ.NEXTVAL,'PREFERENTE');
INSERT INTO FL_COAR VALUES (300,FIL_LUG_COAR_NUM_FIL_SEQ.NEXTVAL,'VIP');

SELECT * FROM FL_COAR;

-- INSERTAR DATOS EN LA TABLA RESERVACION_ASIENTO_COAR:
INSERT INTO RA_COAR VALUES (RES_ASI_COAR_ID_RES_ASI_SEQ.NEXTVAL,30,100,1,
                            '13/09/2022',130,0.16,500);

INSERT INTO RA_COAR VALUES (RES_ASI_COAR_ID_RES_ASI_SEQ.NEXTVAL,35,150,3,
                            '14/09/2022',10,0.16,1000);

INSERT INTO RA_COAR VALUES (RES_ASI_COAR_ID_RES_ASI_SEQ.NEXTVAL,40,200,5,
                            '14/09/2022',67,0.16,300);

INSERT INTO RA_COAR VALUES (RES_ASI_COAR_ID_RES_ASI_SEQ.NEXTVAL,45,150,4,
                            '14/09/2022',12,0.16,2500);

INSERT INTO RA_COAR VALUES (RES_ASI_COAR_ID_RES_ASI_SEQ.NEXTVAL,50,250,8,
                            '27/11/2022',201,0.16,700);

SELECT * FROM RA_COAR;

COMMIT;

-- CONTOL DE TRANSCCIONES:
-- ESCENARIO 01:
SELECT * FROM ARTISTA_COAR;

UPDATE ARTISTA_COAR SET AMATERNO = 'Ruiz' WHERE 
ID_ARTISTA = 1;

SELECT * FROM ARTISTA_COAR;

DELETE FROM ARTISTA_COAR WHERE ID_ARTISTA = 1;

COMMIT;

-- ESCENARIO 02:
SELECT * FROM FILA_LUGAR_COAR;

UPDATE FILA_LUGAR_COAR SET ZONA = 'VIP' WHERE 
ID_LUGAR = 300 AND NUMERO_FILA = 9;

SELECT * FROM FILA_LUGAR_COAR;

COMMIT;

-- ESCENARIO 03:
SELECT * FROM LUGAR_COAR;

UPDATE LUGAR_COAR SET CAPACIDAD_LUGAR = 2000
WHERE ID_LUGAR = 300;

SELECT * FROM LUGAR_COAR;

COMMIT;

SELECT * FROM LUGAR_COAR;

SELECT * FROM LUGAR_COAR;

-- CONSULTAS:

-- 1.Consultar a a los artistas que nos han generado noticias de tours.
SELECT ID_ARTISTA,
       NOMBRE || ' ' || APATERNO || ' ' || AMATERNO ARTISTA
FROM ARTISTA_COAR WHERE 
ID_ARTISTA = ANY (SELECT ID_ARTISTA FROM ARTISTA_COAR
                    MINUS
                    SELECT ID_ARTISTA FROM ARTISTA_NOTICIA_TOUR_COAR);

-- 2. Consultar el nombre del los eventos que se realizo en cada lugar, con el formato 
-- (El evento X se realizo en el lugar Y que tiene una capacidad de Z espectadores).
SELECT q'{El evento }' || E.NOMBRE_EVENTO || q'{ se realizo en el lugar }' 
       || L.NOMBRE_LUGAR || q'{ que tine una capacidad de }' || L.CAPACIDAD_LUGAR
       || q'{ espectadores.}'
FROM EVENTO_COAR E JOIN LUGAR_COAR L USING(ID_LUGAR);

-- 3.Consultar el nombre de los artistas que son del genero de pop.
SELECT * FROM ARTISTA_COAR; 

SELECT ID_ARTISTA,
       NOMBRE || ' ' || APATERNO || ' ' || AMATERNO ARTISTA,
       NOMBRE_CAT GENERO
FROM CATEGORIA_ARTISTA_COAR JOIN ARTISTA_COAR USING(ID_CAT_ARTISTA)
WHERE NOMBRE_CAT = 'POP';       

-- 4.Consultar los datos generales de los eventos (mostrar los datos generales de las tablas 
-- que se relacionan con la tabla de EVENTO_COAR).
SELECT * FROM EVENTO_COAR;

SELECT E.ID_EVENTO, E.NOMBRE_EVENTO EVENTO,
       CE.ID_CAT_EVENTO, CE.NOMBRE_CAT_EVENTO "TIPO DE EVENTO",
       A.ID_ARTISTA,
       A.NOMBRE || ' ' || A.APATERNO || ' ' || A.AMATERNO ARTISTA,
       L.ID_LUGAR,
       L.NOMBRE_LUGAR LUGAR
FROM CATEGORIA_EVENTO_COAR CE JOIN EVENTO_COAR E 
ON (CE.ID_CAT_EVENTO = E.ID_CAT_EVENTO) JOIN ARTISTA_COAR A
ON (A.ID_ARTISTA = E.ID_ARTISTA) JOIN LUGAR_COAR L
ON (L.ID_LUGAR = E.ID_LUGAR);        

-- 5.Consultar los nombres de los eventos y total de clientes que tiene cada uno de los eventos, 
-- pero sólo mostrar aquellos eventos que tengan más de 3 clientes.
INSERT INTO CO_COAR VALUES (CLI_ORD_COAR_ID_ORD_SEQ.NEXTVAL,200,3,'APROBADO',
                            '14/09/2022');

COMMIT; 

SELECT * FROM CO_COAR;

SELECT E.NOMBRE_EVENTO, COUNT(*) "TOTAL DE CLIENTES"
FROM EVENTO_COAR E JOIN CLIENTE_ORDEN_COAR CO
ON (E.ID_EVENTO =  CO.ID_EVENTO)
GROUP BY E.NOMBRE_EVENTO
HAVING COUNT(*) > 3;

-- 6.Consultar el evento que mas ordenes de clientes a tendido.
SELECT E.NOMBRE_EVENTO, COUNT(*) "TOTAL DE CLIENTES"
FROM CLIENTE_ORDEN_COAR CO JOIN EVENTO_COAR E
ON (E.ID_EVENTO =  CO.ID_EVENTO)
GROUP BY E.NOMBRE_EVENTO
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) "TOTAL DE CLIENTES"
FROM CLIENTE_ORDEN_COAR CO JOIN EVENTO_COAR E
ON (E.ID_EVENTO =  CO.ID_EVENTO)
GROUP BY E.NOMBRE_EVENTO);


-- 7.Consultar la categoría del evento mas popular.
SELECT * FROM EVENTO_COAR;

SELECT E.NOMBRE_EVENTO,
       CE.NOMBRE_CAT_EVENTO "CATEGORIA EVENTO",
       COUNT(*) "TOTAL DE EVENTOS"
FROM CATEGORIA_EVENTO_COAR CE JOIN EVENTO_COAR E
ON (CE.ID_CAT_EVENTO =  E.ID_CAT_EVENTO)
GROUP BY E.NOMBRE_EVENTO, CE.NOMBRE_CAT_EVENTO
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) "TOTAL DE EVENTOS"
FROM CATEGORIA_EVENTO_COAR CE JOIN EVENTO_COAR E
ON (CE.ID_CAT_EVENTO =  E.ID_CAT_EVENTO)
GROUP BY E.NOMBRE_EVENTO, CE.NOMBRE_CAT_EVENTO);

-- 8.Consultar la cartelera de artistas que se presentaron en la feria nacional de Zacatecas.
SELECT * FROM EVENTO_COAR;

SELECT A.ID_ARTISTA,
       A.NOMBRE || ' ' || A.APATERNO || ' ' || A.AMATERNO ARTISTA,
       E.NOMBRE_EVENTO EVENTO
FROM ARTISTA_COAR A JOIN EVENTO_COAR E
ON (A.ID_ARTISTA = E.ID_ARTISTA) 
WHERE E.NOMBRE_EVENTO = 'Feria De Zacatecas';             

-- 9.Consultar la zona, el nombre del evento en donde se vendió el boleto más caro.

SELECT FL.ZONA, 
       E.NOMBRE_EVENTO EVENTO,
       R.FECHA,
       R.SUBTOTAL "COSTO BOLETO"
FROM FILA_LUGAR_COAR FL JOIN RESERVACION_ASIENTO_COAR R
ON (FL.ID_LUGAR = R.ID_LUGAR AND FL.NUMERO_FILA = R.NUMERO_FILA)
JOIN CLIENTE_ORDEN_COAR CO ON (CO.ID_ORDEN = R.ID_ORDEN)
JOIN EVENTO_COAR E ON (E.ID_EVENTO = CO.ID_EVENTO)
JOIN LUGAR_COAR L ON (L.ID_LUGAR = FL.ID_LUGAR)
WHERE R.SUBTOTAL = (SELECT MAX(SUBTOTAL) FROM RESERVACION_ASIENTO_COAR);

-- 10.Consultar el nombre del cliente que mas ordenes de eventos a solicitado 
-- (solo mostrar aquel que su estatus de orden sea aprobado).
SELECT * FROM CLIENTE_ORDEN_COAR;

SELECT C.ID_CLIENTE,
       C.NOMBRE || ' ' || C.APATERNO || ' ' || C.AMATERNO CLIENTE,
       COUNT(CO.ID_CLIENTE) "NUMERO DE ORDENES"
FROM CLIENTE_COAR C JOIN CLIENTE_ORDEN_COAR CO 
ON (C.ID_CLIENTE =  CO.ID_CLIENTE)
GROUP BY C.ID_CLIENTE, C.NOMBRE || ' ' || C.APATERNO || ' ' || C.AMATERNO
HAVING COUNT(CO.ID_CLIENTE) = (SELECT MAX(COUNT(ID_CLIENTE)) FROM 
                              CLIENTE_ORDEN_COAR GROUP BY ID_CLIENTE);   

-- 11.Consultar la fecha y la hora en la que inician y terminan cada uno de los eventos.
SELECT NOMBRE_EVENTO EVENTO,
       TO_CHAR(FECHA_HORA_INICIO, 'DD-MON-YYYY HH12:MI:SS AM') "FECHA-HORA DE INICIO",
       TO_CHAR(FECHA_HORA_FIN, 'DD-MON-YYYY HH12:MI:SS AM') "FECHA-HORA DE FIN" 
FROM EVENTO_COAR;       

-- 12.Consultar a los artistas que si han generado noticias de tours.
SELECT ID_ARTISTA,
       NOMBRE || ' ' || APATERNO || ' ' || AMATERNO ARTISTA
FROM ARTISTA_COAR WHERE 
ID_ARTISTA = ANY (SELECT ID_ARTISTA FROM ARTISTA_COAR
                  INTERSECT
                  SELECT ID_ARTISTA FROM ARTISTA_NOTICIA_TOUR_COAR);

-- 13.Consultar a los clientes que son de Zacatecas.
SELECT * FROM CLIENTE_COAR;
SELECT * FROM UBICACION_COAR;

SELECT C.ID_CLIENTE,
       C.NOMBRE || ' ' || C.APATERNO || ' ' || C.AMATERNO CLIENTE,
       U.ESTADO "ESTADO DE RESIDENCIA"
FROM CLIENTE_COAR C JOIN UBICACION_COAR U 
ON (U.ID_UBICACION = C.ID_UBICACION) 
WHERE UPPER(U.ESTADO) = 'ZACATECAS';

-- 14.Consulta todas las ordenes que se hicieron en el mes de septiembre y que fueron aprobadas.
SELECT * FROM CLIENTE_ORDEN_COAR;

SELECT * FROM CLIENTE_ORDEN_COAR
WHERE TO_CHAR(FECHA, 'MON') = 'SEP'
AND UPPER(ESTATUS) = 'APROBADO';

-- 15.¿Que eventos se han realizado en el multiforo de Zacatecas?.
SELECT * FROM EVENTO_COAR;
SELECT * FROM LUGAR_COAR;

SELECT E.ID_EVENTO,
       E.NOMBRE_EVENTO EVENTO, 
       A.ID_ARTISTA,
       A.NOMBRE || ' ' || A.APATERNO || ' ' || A.AMATERNO ARTISTA,
       L.NOMBRE_LUGAR LUGAR,
       E.FECHA_HORA_INICIO FECHA
FROM ARTISTA_COAR A JOIN EVENTO_COAR E ON (A.ID_ARTISTA = E.ID_ARTISTA)
JOIN LUGAR_COAR L ON (L.ID_LUGAR = E.ID_LUGAR) 
WHERE UPPER(L.NOMBRE_LUGAR) = 'MULTIFORO';        

-- 16.Consultar los lugares que están ubicados en la Ciudad de México.
SELECT * FROM LUGAR_COAR;
SELECT * FROM UBICACION_COAR;

SELECT L.ID_LUGAR,
       L.NOMBRE_LUGAR LUGAR, 
       U.ESTADO UBICACION
FROM LUGAR_COAR L JOIN UBICACION_COAR U 
ON (U.ID_UBICACION = L.ID_UBICACION) 
WHERE UPPER(U.ESTADO) = 'CDMX';

-- 17.Consultar el artista que mas eventos a realizado.
SELECT * FROM EVENTO_COAR;
SELECT * FROM LUGAR_COAR;

INSERT INTO E_COAR VALUES (EVEN_COAR_ID_EVEN_SEQ.NEXTVAL,35,2,250,
        '2000s Pop Tour', TO_DATE('02/12/2022 8:30:00 PM', 'DD/MM/YYYY HH12:MI:SS AM'),
        TO_DATE('02/12/2022 11:00:00 PM', 'DD/MM/YYYY HH12:MI:SS AM'),
        '10/11/2022');

COMMIT;        

SELECT A.ID_ARTISTA,
       A.NOMBRE || ' ' || A.APATERNO || ' ' || A.AMATERNO ARTISTA,
      COUNT(*) "NUMERO DE EVENTOS"
FROM ARTISTA_COAR A JOIN EVENTO_COAR E ON (A.ID_ARTISTA = E.ID_ARTISTA)
GROUP BY A.ID_ARTISTA, A.NOMBRE || ' ' || A.APATERNO || ' ' || A.AMATERNO
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM EVENTO_COAR
                   GROUP BY ID_ARTISTA);

-- 18.Consultar el nombre del cliente que compro el boleto mas barato y la zona del boleto.
SELECT * FROM RESERVACION_ASIENTO_COAR;
SELECT * FROM CLIENTE_ORDEN_COAR;
SELECT * FROM CLIENTE_COAR;
SELECT * FROM FILA_LUGAR_COAR;

SELECT C.ID_CLIENTE,
       C.NOMBRE || ' ' || C.APATERNO || ' ' || C.AMATERNO CLIENTE,
       FL.ZONA, 
       R.SUBTOTAL "COSTO BOLETO"
FROM FILA_LUGAR_COAR FL JOIN RESERVACION_ASIENTO_COAR R
ON (FL.ID_LUGAR = R.ID_LUGAR AND FL.NUMERO_FILA = R.NUMERO_FILA)
JOIN CLIENTE_ORDEN_COAR CO ON (CO.ID_ORDEN = R.ID_ORDEN)
JOIN CLIENTE_COAR C ON (CO.ID_CLIENTE = C.ID_CLIENTE)
WHERE R.SUBTOTAL = (SELECT MIN(SUBTOTAL) FROM RESERVACION_ASIENTO_COAR);

-- 19.Consultar la categoría de evento, de la cual no se han generado eventos.
SELECT * FROM CATEGORIA_EVENTO_COAR;
SELECT * FROM EVENTO_COAR;

SELECT ID_CAT_EVENTO,
       NOMBRE_CAT_EVENTO CATEGORIA_EVENTO
FROM CATEGORIA_EVENTO_COAR 
WHERE ID_CAT_EVENTO NOT IN (SELECT ID_CAT_EVENTO FROM EVENTO_COAR);      

-- 20.Consultar el nombre de los clientes, el costo del boleto que compraron y una leyenda que 
-- indique:
-- "Boleto Caro" si el costo del boleto es mayor a 1,000.00.
-- "Boleto Intermedio" si el costo del boleto esta entre 500.00 y 1000.00.
-- "Boleto Barato" si el costo del boleto es menor a 500.00.
SELECT C.ID_CLIENTE,
       C.NOMBRE || ' ' || C.APATERNO || ' ' || C.AMATERNO CLIENTE,
       R.SUBTOTAL "COSTO BOLETO",
       CASE WHEN SUBTOTAL > 1000 THEN 'Boleto Caro'
            WHEN SUBTOTAL >= 500 AND SUBTOTAL <= 1000 THEN 'Boleto Intermedio'
            WHEN SUBTOTAL < 500 THEN 'Boleto Barato'
            ELSE 'Boleto Normal'
        END "TIPO BOLETO"
FROM FILA_LUGAR_COAR FL JOIN RESERVACION_ASIENTO_COAR R
ON (FL.ID_LUGAR = R.ID_LUGAR AND FL.NUMERO_FILA = R.NUMERO_FILA)
JOIN CLIENTE_ORDEN_COAR CO ON (CO.ID_ORDEN = R.ID_ORDEN)
JOIN CLIENTE_COAR C ON (CO.ID_CLIENTE = C.ID_CLIENTE);

-- 21.Consultar el nombre y la dirección del lugar que tiene la menor capacidad de espectadores.
SELECT * FROM LUGAR_COAR;
SELECT * FROM UBICACION_COAR;

SELECT L.ID_LUGAR, L.NOMBRE_LUGAR LUGAR,L.CAPACIDAD_LUGAR CAPACIDAD,
       U.DIRECCION, U.CIUDAD, U.ESTADO, U.PAIS
FROM LUGAR_COAR L JOIN UBICACION_COAR U
ON (U.ID_UBICACION = L.ID_UBICACION) 
WHERE L.CAPACIDAD_LUGAR = (SELECT MIN(CAPACIDAD_LUGAR) FROM LUGAR_COAR);

-- 22.Consultar el total de artistas que hay de cada categoría (genero).
SELECT * FROM ARTISTA_COAR;
SELECT * FROM CATEGORIA_ARTISTA_COAR;

SELECT CA.NOMBRE_CAT CATEGORIA,
       COUNT(*) "TOTAL DE ARTISTAS"
FROM CATEGORIA_ARTISTA_COAR CA JOIN ARTISTA_COAR A 
ON (CA.ID_CAT_ARTISTA = A.ID_CAT_ARTISTA)
GROUP BY CA.ID_CAT_ARTISTA, CA.NOMBRE_CAT   
ORDER BY 2 DESC;         

-- 23.Consultar los artistas nacionales (artistas mexicanos).
SELECT ID_ARTISTA,
       NOMBRE || ' ' || APATERNO || ' ' || AMATERNO ARTISTA,
       NACIONALIDAD
FROM ARTISTA_COAR WHERE UPPER(NACIONALIDAD) = 'MEXICANA'
ORDER BY 1;        

-- 24.Consultar la ganancias totales de cada uno de los eventos.
SELECT * FROM RESERVACION_ASIENTO_COAR;
SELECT * FROM CLIENTE_ORDEN_COAR;
SELECT * FROM EVENTO_COAR;

SELECT E.NOMBRE_EVENTO EVENTO,
       SUM(R.SUBTOTAL) "GANANCIA TOTAL"
FROM RESERVACION_ASIENTO_COAR R JOIN CLIENTE_ORDEN_COAR CO 
ON (CO.ID_ORDEN = R.ID_ORDEN) JOIN EVENTO_COAR E
ON (E.ID_EVENTO =  CO.ID_EVENTO)
GROUP BY E.NOMBRE_EVENTO;

-- 25.Consultar los datos generales de los artistas (TODOS) y en caso de que halla noticias 
-- de tours de dichos artistas, mostrar el nombre del tour y la fecha.
SELECT * FROM ARTISTA_COAR;
SELECT * FROM ARTISTA_NOTICIA_TOUR_COAR;

SELECT A.ID_ARTISTA,
       A.NOMBRE || ' ' || A.APATERNO || ' ' || A.AMATERNO ARTISTA,
       ANT.DESCRIPCION TOUR, 
       ANT.FECHA_INICIO_PUBLICACION FECHA
FROM ARTISTA_COAR A LEFT OUTER JOIN ARTISTA_NOTICIA_TOUR_COAR ANT
ON (A.ID_ARTISTA = ANT.ID_ARTISTA);
