-- ACTIVIDAD: CAPITULO_11 "Vistas".
-- MATERIA: SISTEMAS DE BASE DE DATOS II.
-- NOMBRE: CRISITAN OMAR ALVARADO RODRIGUEZ.
-- GRUPO: 5"B".

-- 1. Elabore 3 vistas sencillas y elabore las sentencias SELECT para consultar los datos de
-- dichas vistas.
CREATE VIEW CLI_MAYOR_EDAD AS
SELECT * FROM CLIENTE_COAR
WHERE EDAD >= 18;

SELECT * FROM CLI_MAYOR_EDAD;

CREATE VIEW EMPL_AGENCIA AS
SELECT E.ID_EMPLEADO, E.NOMBRE, E.APATERNO,
       E.AMATERNO, E.SALARIO, A.ID_AGENCIA,
       A.NOMBRE NOMBRE_AGENCIA, AE.FECHA_ASIGNACION
FROM EMPLEADO_COAR E JOIN AGENCIA_EMPLEADO_COAR AE
ON E.ID_EMPLEADO = AE.ID_EMPLEADO
JOIN AGENCIA_COAR A ON A.ID_AGENCIA = AE.ID_AGENCIA;       

SELECT * FROM EMPL_AGENCIA;

CREATE VIEW EMPL_SAL AS
SELECT * FROM EMPLEADO_COAR
WHERE SALARIO > 3000;

SELECT * FROM EMPL_SAL;

-- 2. Elabore 3 vistas complejas sencillas y elabore las sentencias SELECT para consultar los
-- datos de dichas vistas.
-- Cantidad de clintes que han reservado en cada uno de los hoteles.
CREATE VIEW CAN_CLI_RESR_HOTEL AS
SELECT R.ID_HOTEL, H.NOMBRE, COUNT(ID_CLIENTE) "CANTIDAD DE CLIENTES"
FROM HOTEL_COAR H JOIN HOTEL_HABITACION_COAR HH
ON H.ID_HOTEL = HH.ID_HOTEL JOIN RESERVACION_COAR R
ON HH.ID_HOTEL = R.ID_HOTEL
GROUP BY R.ID_HOTEL, H.NOMBRE
ORDER BY R.ID_HOTEL;

SELECT * FROM CAN_CLI_RESR_HOTEL;

CREATE VIEW AGEN_MIN_MAX_SAL AS
SELECT A.ID_AGENCIA, A.NOMBRE AGENCIA, 
       MIN(E.SALARIO) MIN_SALARIO, MAX(E.SALARIO) MAX_SALARIO
FROM EMPLEADO_COAR E JOIN AGENCIA_EMPLEADO_COAR AE
ON E.ID_EMPLEADO = AE.ID_EMPLEADO
JOIN AGENCIA_COAR A ON A.ID_AGENCIA = AE.ID_AGENCIA
GROUP BY A.ID_AGENCIA, A.NOMBRE
ORDER BY A.ID_AGENCIA;        

SELECT * FROM AGEN_MIN_MAX_SAL;

-- Vista para las ganacias totales de cada uno de los hoteles.
CREATE VIEW GANANCIAS_HOTEL AS
SELECT R.ID_HOTEL, H.NOMBRE, SUM(SUBTOTAL) TOTAL_GANANCIAS
FROM HOTEL_COAR H JOIN HOTEL_HABITACION_COAR HH
ON H.ID_HOTEL = HH.ID_HOTEL JOIN RESERVACION_COAR R
ON HH.ID_HOTEL = R.ID_HOTEL
GROUP BY R.ID_HOTEL, H.NOMBRE
ORDER BY R.ID_HOTEL;

SELECT * FROM GANANCIAS_HOTEL;

-- 3. Modifique 1 vista sencilla y 1 vista compleja.
CREATE OR REPLACE VIEW EMPL_SAL AS
SELECT * FROM EMPLEADO_COAR
WHERE SALARIO > 2500;

SELECT * FROM EMPL_SAL;

CREATE OR REPLACE VIEW AGEN_MIN_MAX_SAL AS
SELECT A.ID_AGENCIA, A.NOMBRE AGENCIA, 
       MIN(E.SALARIO) MIN_SALARIO, MAX(E.SALARIO) MAX_SALARIO,
       AVG(E.SALARIO) PROMEDIO_SAL
FROM EMPLEADO_COAR E JOIN AGENCIA_EMPLEADO_COAR AE
ON E.ID_EMPLEADO = AE.ID_EMPLEADO
JOIN AGENCIA_COAR A ON A.ID_AGENCIA = AE.ID_AGENCIA
GROUP BY A.ID_AGENCIA, A.NOMBRE
ORDER BY A.ID_AGENCIA;        

SELECT * FROM AGEN_MIN_MAX_SAL;

-- 4. Elabore una vista sencilla que cumpla con las características necesarias para poder
-- ejecutar sentencias DML a través de ella.
-- a. Inserte registros por medio de la vista
-- b. Modifique registros por medio de la vista.
-- c. Elimine registros por medio de la vista.
-- Vista en donde se muestren los clintes que son hombres (M).
CREATE OR REPLACE VIEW CLIENTE_HOMBRE AS
SELECT * FROM CLIENTE_COAR WHERE SEXO = 'M';

SELECT * FROM CLIENTE_HOMBRE;

INSERT INTO CLIENTE_HOMBRE VALUES (CLI_COAR_ID_CLI_SEQ.NEXTVAL, 'DIAZ', 'SANCHEZ',
            'CRISTIAN', 'M', 15, '4927402723', 'ZACATECAS, NUM 88');

UPDATE CLIENTE_HOMBRE SET EDAD = 50 WHERE ID_CLIENTE = 20;

DELETE FROM CLIENTE_HOMBRE WHERE ID_CLIENTE = 410;

-- 5. Elabore 2 vistas con la cláusula WITH CHECK OPTION y elabore las sentencias
-- necesarias para comprobar la restricción de la vista.
CREATE OR REPLACE VIEW CLI_MAYOR_EDAD AS
SELECT * FROM CLIENTE_COAR
WHERE EDAD >= 18 
WITH CHECK OPTION CONSTRAINT CLI_MAYOR_EDAD_CK; 

SELECT * FROM CLI_MAYOR_EDAD;

INSERT INTO CLI_MAYOR_EDAD VALUES (CLI_COAR_ID_CLI_SEQ.NEXTVAL, 'FLORES', 'ALVARADO',
            'JUAN', 'M', 12, '4927408393', 'ZACATECAS, NUM 90');

UPDATE CLI_MAYOR_EDAD SET EDAD = 15 WHERE ID_CLIENTE = 5;
UPDATE CLIENTE_HOMBRE SET EDAD = 35 WHERE ID_CLIENTE = 20;

DELETE FROM CLI_MAYOR_EDAD WHERE ID_CLIENTE = 5;

CREATE OR REPLACE VIEW EMPL_SAL AS
SELECT * FROM EMPLEADO_COAR
WHERE SALARIO > 3000
WITH CHECK OPTION CONSTRAINT EMPL_SAL_CK;

SELECT * FROM EMPL_SAL;

INSERT INTO EMPL_SAL VALUES (EMP_COAR_ID_EMP_SEQ.NEXTVAL, 'LOPEZ', 'PEREZ', 
            'MARIA', 'NAN@GMAIL.COM', '8426753489', 'GUADALUPE, ZAC NUM 21', 
            TO_DATE('SEP 14, 2022','MON DD, YYYY'), 2000);

UPDATE EMPL_SAL SET SALARIO = 2800 WHERE ID_EMPLEADO = 30;

DELETE FROM EMPL_SAL WHERE ID_EMPLEADO = 40;

-- 6. Elabore 2 vistas con la cláusula WITH READ ONLY y elabore las sentencias necesarias
-- para comprobar la restricción de la vista.
CREATE OR REPLACE VIEW AGENCIA_ZAC AS
SELECT * FROM AGENCIA_COAR 
WHERE DOMICILIO LIKE '%ZAC%' 
WITH READ ONLY;  

SELECT * FROM AGENCIA_ZAC;

INSERT INTO AGENCIA_ZAC VALUES (AGE_COAR_ID_AGE_SEQ.NEXTVAL, 'TRIVAGO', 
            '9179069307', 'TEPITO, CDMX, NUM 45'); 

UPDATE AGENCIA_ZAC SET NOMBRE = 'EXPEDIA' WHERE ID_AGENCIA = 102;

DELETE FROM AGENCIA_ZAC WHERE ID_AGENCIA = 104; 

CREATE OR REPLACE VIEW RESERVACION_HOTEL_60 AS
SELECT * FROM RESERVACION_COAR 
WHERE ID_HOTEL = 60
WITH READ ONLY;

SELECT * FROM RESERVACION_HOTEL_60;

INSERT INTO RESERVACION_HOTEL_60 VALUES (15, 104, 40, 50, 3, '00000006', '15/11/2022', 
                        '17/11/2022', 3500, 0, 3560); 

UPDATE RESERVACION_HOTEL_60 SET ID_HOTEL = 60 WHERE FOLIO_RESERVACION = '00000001';

DELETE FROM RESERVACION_HOTEL_60 WHERE FOLIO_RESERVACION = '00000001';

-- 7. Elabore la sentencia necesaria para borrar una vista.
DROP VIEW RESERVACION_HOTEL_60;
DROP VIEW AGENCIA_ZAC;
