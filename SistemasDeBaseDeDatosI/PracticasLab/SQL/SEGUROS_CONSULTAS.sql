-- Practica 12: Consultas a la base de datos de SEGUROS
-- Materia: Sitemas de bases de datos
-- Nombre: Cristian Omar Alvarado Rodriguez

-- 1. Consultar los datos generales de todos los clientes.
SELECT * FROM CLIENTE_COAR;

-- 2. Consultar el nombre completo de los agentes de ventas en una sola columna.
SELECT APATERNO || ' ' || AMATERNO || ' ' || NOMBRE FROM AGENTE_VENTAS_COAR;
SELECT APATERNO || ' ' || AMATERNO || ' ' || NOMBRE NOMBRE_COMPLETO FROM AGENTE_VENTAS_COAR;
SELECT APATERNO || ' ' || AMATERNO || ' ' || NOMBRE AS AGENTE FROM AGENTE_VENTAS_COAR;
SELECT APATERNO || ' ' || AMATERNO || ' ' || NOMBRE AS "NOMBRE DEL AGENTE" FROM AGENTE_VENTAS_COAR;

-- 3. Consultar el salario anual de los agustadores.
ALTER TABLE AJUSTADOR_COAR ADD SALARIO NUMBER(8,2);

SELECT * FROM AJUSTADOR_COAR;

UPDATE AJUSTADOR_COAR SET SALARIO = 12000 WHERE ID_AJUSTADOR = 1;
UPDATE AJUSTADOR_COAR SET SALARIO = 15000 WHERE ID_AJUSTADOR = 2;
UPDATE AJUSTADOR_COAR SET SALARIO = 25000 WHERE ID_AJUSTADOR = 3;
UPDATE AJUSTADOR_COAR SET SALARIO = 20000 WHERE ID_AJUSTADOR = 4;
UPDATE AJUSTADOR_COAR SET SALARIO = 30000 WHERE ID_AJUSTADOR = 5;

SELECT APATERNO, AMATERNO, NOMBRE, SALARIO "SALARIO MENSUAL", SALARIO * 12 "SALARIO ANUAL" FROM AJUSTADOR_COAR;

-- 4. Consultar los datos generales de todos los vehiculos de una determinada marca.
SELECT * FROM AUTOMOVIL_COAR WHERE MARCA = 'Nissan';

-- 5. Consultar los datos generales de los ajustadores cuyo salario este entre 5000 y 10000.
SELECT * FROM AJUSTADOR_COAR WHERE SALARIO BETWEEN 5000 AND 10000;
SELECT * FROM AJUSTADOR_COAR WHERE SALARIO BETWEEN 10000 AND 20000;

-- 6. Consultar el total de polizas generadas.
SELECT * FROM POLIZA_COAR;
SELECT COUNT(*) "TOTAL DE POLIZAS" FROM POLIZA_COAR;

-- 7. Consultar el total de clientes registrados de cada municipio.
SELECT * FROM CLIENTE_COAR;

UPDATE CLIENTE_COAR SET MUNICIPIO = 'GUADALUPE' WHERE ID_CLIENTE = 4;
UPDATE CLIENTE_COAR SET MUNICIPIO = 'GUADALUPE' WHERE ID_CLIENTE = 5;

SELECT MUNICIPIO, COUNT(*) "TOTAL DE CLIENTES" FROM CLIENTE_COAR GROUP BY MUNICIPIO;

-- 8. Consultar el nombre completo de los clientes que tienen automovil.
SELECT * FROM CLIENTE_AUTOMOVIL_COAR;

SELECT APATERNO, AMATERNO, NOMBRE FROM CLIENTE_COAR JOIN 
CLIENTE_AUTOMOVIL_COAR ON CLIENTE_COAR.ID_CLIENTE = CLIENTE_AUTOMOVIL_COAR.ID_CLIENTE;

SELECT APATERNO, AMATERNO, NOMBRE FROM CLIENTE_COAR C JOIN CLIENTE_AUTOMOVIL_COAR CA ON C.ID_CLIENTE = CA.ID_CLIENTE;

-- 9. Consultar los datos generales de las pólizas (datos generales de todas las tablas que se relacionan con la póliza).
SELECT * FROM POLIZA_COAR;

SELECT  C.APATERNO || ' ' || C.AMATERNO || ' ' || C.NOMBRE AS CLIENTE,
        A.*,
        AG.APATERNO || ' ' || AG.AMATERNO || ' ' || AG.NOMBRE AS AGENTE_VENTAS,
        TS.DESCRIPCION AS TIPO_SEGURO,
        P.FOLIO, P.FECHA_E, P.FECHA_I, P.FECHA_F, P.COSTO AS COSTO_POLIZA
FROM CLIENTE_COAR C JOIN CLIENTE_AUTOMOVIL_COAR CA  ON C.ID_CLIENTE = CA.ID_CLIENTE 
                                                      JOIN AUTOMOVIL_COAR A ON A.NUM_SERIE = CA.NUM_SERIE
                                                      JOIN POLIZA_COAR P ON CA.ID_CLIENTE = P.ID_CLIENTE
                                                                         AND CA.NUM_SERIE = P.NUM_SERIE
                                                      JOIN AGENTE_VENTAS_COAR AG ON AG.ID_AGENTE = P.ID_AGENTE
                                                      JOIN TIPO_SEGURO_COAR TS ON TS.ID_TIPO_SEGURO = P.ID_TIPO_SEGURO;                   

-- 10. Consultar los datos generales de los accidentes (datos generales de todas las tablas que se relacionan con el accidente).
SELECT * FROM ACCIDENTE_COAR;
SELECT * FROM TIPO_ACCIDENTE_COAR;
SELECT * FROM POLIZA_COAR;

SELECT  C.APATERNO || ' ' || C.AMATERNO || ' ' || C.NOMBRE AS CLIENTE,
        A.*,
        AG.APATERNO || ' ' || AG.AMATERNO || ' ' || AG.NOMBRE AS AGENTE_VENTAS,
        TS.DESCRIPCION AS TIPO_SEGURO,
        P.FOLIO, P.FECHA_E, P.FECHA_I, P.FECHA_F, P.COSTO AS COSTO_POLIZA,
        TA.DESCRIPCION AS TIPO_ACCIDENTE,
        AC.FOLIO_ACCIDENTE, AC.FECHA, AC.LUGAR, AC.NUM_HERIDOS
FROM CLIENTE_COAR C JOIN CLIENTE_AUTOMOVIL_COAR CA  ON C.ID_CLIENTE = CA.ID_CLIENTE 
                                                      JOIN AUTOMOVIL_COAR A ON A.NUM_SERIE = CA.NUM_SERIE
                                                      JOIN POLIZA_COAR P ON CA.ID_CLIENTE = P.ID_CLIENTE
                                                                         AND CA.NUM_SERIE = P.NUM_SERIE
                                                      JOIN AGENTE_VENTAS_COAR AG ON AG.ID_AGENTE = P.ID_AGENTE
                                                      JOIN TIPO_SEGURO_COAR TS ON TS.ID_TIPO_SEGURO = P.ID_TIPO_SEGURO
                                                      JOIN ACCIDENTE_COAR AC ON AC.ID_CLIENTE = CA.ID_CLIENTE
                                                                                AND AC.NUM_SERIE = CA.NUM_SERIE
                                                                                AND AC.ID_AGENTE = P.ID_AGENTE
                                                                                AND AC.ID_TIPO_SEGURO = P.ID_TIPO_SEGURO
                                                                                AND AC.FOLIO_POLIZA = P.FOLIO
                                                      JOIN TIPO_ACCIDENTE_COAR TA ON TA.ID_TIPO_ACCIDENTE = AC.ID_TIPO_ACCIDENTE;                           
                                                      
-- 11. Consultar los datos generales del taller que reparó un determinado automóvil.
SELECT * FROM TALLER_COAR;
SELECT * FROM POLIZA_COAR;
SELECT * FROM REPARACION_COAR;

SELECT T.NOMBRE "NOMBRE_TALLER", T.UBICACION "UBICACION_TALLER", T.TELEFONO "TELEFONO_TALLER",
       A.*,
       P.FOLIO "FOLIO POLIZA", P.FECHA_E, P.FECHA_I, P.FECHA_F, P.COSTO "COSTO POLIZA",
       R.ID_REPARACION, R.FECHA_ENTRADA, R.FECHA_SALIDA, R.DESCRIPCION, R.COSTO AS COSTO_REPARACION
FROM TALLER_COAR T JOIN REPARACION_COAR R ON T.ID_TALLER = R.ID_TALLER 
                   JOIN AUTOMOVIL_COAR A ON A.NUM_SERIE = R.NUM_SERIE
                   JOIN POLIZA_COAR P ON P.ID_CLIENTE = R.ID_CLIENTE
                                          AND P.NUM_SERIE = R.NUM_SERIE
                                          AND P.ID_AGENTE = R.ID_AGENTE
                                          AND P.ID_TIPO_SEGURO = R.ID_TIPO_SEGURO
                                          AND P.FOLIO = R.FOLIO_POLIZA;

-- 12. Consultar el total de automóviles que tiene cada cliente.
SELECT * FROM CLIENTE_COAR;
SELECT * FROM CLIENTE_AUTOMOVIL_COAR;

SELECT C.ID_CLIENTE, APATERNO, AMATERNO, NOMBRE, COUNT(*) "TOTAL DE AUTOS" 
FROM CLIENTE_COAR C JOIN CLIENTE_AUTOMOVIL_COAR CA ON C.ID_CLIENTE = CA.ID_CLIENTE 
GROUP BY C.ID_CLIENTE, APATERNO, AMATERNO, NOMBRE;

-- 13. Consultar el total de pólizas que ha vendido cada empleado.
SELECT * FROM AGENTE_VENTAS_COAR;
SELECT * FROM POLIZA_COAR;

SELECT AG.ID_AGENTE, APATERNO, AMATERNO, NOMBRE, COUNT(*) "TOTAL DE POLIZAS VENDIDAS"
FROM AGENTE_VENTAS_COAR AG JOIN POLIZA_COAR P ON AG.ID_AGENTE = P.ID_AGENTE
GROUP BY AG.ID_AGENTE, APATERNO, AMATERNO, NOMBRE;

-- 14. Consultar el total de pólizas emitidas por cada tipo de seguro.
SELECT * FROM TIPO_SEGURO_COAR;
SELECT * FROM POLIZA_COAR;

SELECT TS.ID_TIPO_SEGURO, TS.DESCRIPCION, COUNT(*) "TOTAL DE POLIZAS"
FROM TIPO_SEGURO_COAR TS JOIN POLIZA_COAR P ON TS.ID_TIPO_SEGURO = P.ID_TIPO_SEGURO
GROUP BY TS.ID_TIPO_SEGURO, TS.DESCRIPCION;

-- 15. Consultar el total de accidentes que haya atendido cada ajustador.
SELECT * FROM AJUSTADOR_COAR;
SELECT * FROM ACCIDENTE_COAR;

SELECT AJ.ID_AJUSTADOR, APATERNO, AMATERNO, NOMBRE, COUNT(*) "TOTAL DE ACCIDENTES ATENDIDOS"
FROM AJUSTADOR_COAR AJ JOIN ACCIDENTE_COAR AC ON AJ.ID_AJUSTADOR = AC.ID_AJUSTADOR
GROUP BY AJ.ID_AJUSTADOR, APATERNO, AMATERNO, NOMBRE;

-- 16. Consultar el nombre de los empleados que no ha vendido polizas.
SELECT * FROM AGENTE_VENTAS_COAR;
SELECT * FROM POLIZA_COAR;

SELECT ID_AGENTE, APATERNO, AMATERNO, NOMBRE 
FROM AGENTE_VENTAS_COAR WHERE ID_AGENTE NOT IN (SELECT ID_AGENTE FROM POLIZA_COAR);

-- 17. Consultar el nombre de los clientes que no tienen automóvil asignado.
SELECT * FROM CLIENTE_COAR;
SELECT * FROM CLIENTE_AUTOMOVIL_COAR;

INSERT INTO CLIENTE_COAR VALUES (6,'GARCIA','ROBLES','FERNANDO','FER@GMAIL.COM','JEREZ');
INSERT INTO CLIENTE_COAR VALUES (7,'VARGAS','HERNANDEZ','ALEXIS','ALEX@GMAIL.COM','JEREZ');

SELECT ID_CLIENTE, APATERNO, AMATERNO, NOMBRE
FROM CLIENTE_COAR WHERE ID_CLIENTE NOT IN (SELECT ID_CLIENTE FROM CLIENTE_AUTOMOVIL_COAR);

-- 18. Consultar el tipo de seguro que no se ha vendido.
SELECT * FROM TIPO_SEGURO_COAR;
SELECT * FROM POLIZA_COAR;

SELECT ID_TIPO_SEGURO, DESCRIPCION
FROM TIPO_SEGURO_COAR WHERE ID_TIPO_SEGURO NOT IN (SELECT ID_TIPO_SEGURO FROM POLIZA_COAR);

-- 19. Consultar los datos generales de los ajustadores que no han atendido accidentes.
SELECT * FROM AJUSTADOR_COAR;
SELECT * FROM ACCIDENTE_COAR;

SELECT ID_AJUSTADOR, APATERNO, AMATERNO, NOMBRE
FROM AJUSTADOR_COAR WHERE ID_AJUSTADOR NOT IN (SELECT ID_AJUSTADOR FROM ACCIDENTE_COAR);

-- 20. Consultar el nombre completo de los clientes que no se han accidentado.
SELECT * FROM CLIENTE_COAR;
SELECT * FROM ACCIDENTE_COAR;

SELECT ID_CLIENTE, APATERNO, AMATERNO, NOMBRE
FROM CLIENTE_COAR WHERE ID_CLIENTE NOT IN (SELECT ID_CLIENTE FROM POLIZA_COAR WHERE ID_CLIENTE 
IN (SELECT ID_CLIENTE FROM ACCIDENTE_COAR));

-- 21. Consultar el nombre del taller que no ha reparado automoviles.
SELECT * FROM TALLER_COAR;
SELECT * FROM REPARACION_COAR;

SELECT ID_TALLER, NOMBRE
FROM TALLER_COAR WHERE ID_TALLER NOT IN (SELECT ID_TALLER FROM REPARACION_COAR);

-- 22. Consultar los datos generales de los vehículos (TODOS) y en caso de que estén asignados a un cliente, 
-- mostrar el nombre del cliente.
SELECT * FROM AUTOMOVIL_COAR;
SELECT * FROM CLIENTE_AUTOMOVIL_COAR;
SELECT * FROM CLIENTE_COAR;

-- Union externa
SELECT A.*,
       C.APATERNO || ' ' || C.AMATERNO || ' ' || C.NOMBRE "NOMBRE DEL CLIENTE"
FROM AUTOMOVIL_COAR A LEFT OUTER JOIN CLIENTE_AUTOMOVIL_COAR CA ON A.NUM_SERIE = CA.NUM_SERIE 
                      LEFT OUTER JOIN CLIENTE_COAR C ON CA.ID_CLIENTE = C.ID_CLIENTE;

-- 23. Consultar los datos generales de todos los vehículos y en caso de que estén asegurados, 
-- mostrar los datos generales de las pólizas.
SELECT * FROM AUTOMOVIL_COAR;
SELECT * FROM POLIZA_COAR;

SELECT A.*,
       P.ID_TIPO_SEGURO, P.FOLIO "FOLIO_POLIZA", P.FECHA_E, P.FECHA_I, P.FECHA_F, P.COSTO "COSTO_POLIZA"
FROM AUTOMOVIL_COAR A LEFT OUTER JOIN CLIENTE_AUTOMOVIL_COAR CA ON A.NUM_SERIE = CA.NUM_SERIE
                     LEFT OUTER JOIN POLIZA_COAR P ON CA.ID_CLIENTE = P.ID_CLIENTE 
                     AND A.NUM_SERIE = P.NUM_SERIE;

-- 24. Consultar los datos generales de todos los clientes y en caso de que tengan un vehículo asegurado, 
-- mostrar los datos de las pólizas. Además, en caso de que se hayan accidentado, mostrar los datos de los accidentes.
SELECT * FROM CLIENTE_COAR;
SELECT * FROM AUTOMOVIL_COAR;
SELECT * FROM POLIZA_COAR;
SELECT * FROM ACCIDENTE_COAR;

SELECT C.APATERNO || ' ' || C.AMATERNO || ' ' || C.NOMBRE "NOMBRE DEL CLIENTE",
       A.*,
       P.ID_TIPO_SEGURO, P.FOLIO "FOLIO_POLIZA", P.FECHA_E, P.FECHA_I, P.FECHA_F, P.COSTO "COSTO_POLIZA",
       AC.FOLIO_ACCIDENTE, AC.FECHA "FECHA_ACCIDENTE", AC.LUGAR, AC.NUM_HERIDOS
FROM CLIENTE_COAR C LEFT OUTER JOIN CLIENTE_AUTOMOVIL_COAR CA ON C.ID_CLIENTE = CA.ID_CLIENTE
                    LEFT OUTER JOIN AUTOMOVIL_COAR A ON CA.NUM_SERIE = A.NUM_SERIE
                    LEFT OUTER JOIN POLIZA_COAR P ON A.NUM_SERIE = P.NUM_SERIE AND C.ID_CLIENTE = P.ID_CLIENTE
                    LEFT OUTER JOIN ACCIDENTE_COAR AC ON A.NUM_SERIE = AC.NUM_SERIE AND C.ID_CLIENTE = AC.ID_CLIENTE;

-- 25. Consultar el nombre completo de los clientes que más automóviles tienen.
SELECT * FROM CLIENTE_COAR;
SELECT * FROM AUTOMOVIL_COAR;
SELECT * FROM CLIENTE_AUTOMOVIL_COAR;

INSERT INTO CLIENTE_AUTOMOVIL_COAR VALUES (1,'00000006','09/05/2022');

-- PASO 1: OBTENER EL TOTAL DE AUTOS QUE TIENE CADA CLIENTE
SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) "TOTAL DE AUTOS"
FROM CLIENTE_COAR C JOIN CLIENTE_AUTOMOVIL_COAR CA ON C.ID_CLIENTE = CA.ID_CLIENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;

-- PASO 2: OBTENER EL VALOR MAS ALTO DEL TOTAL OBTENIDO DEL PASO 1
SELECT MAX(COUNT(*)) "TOTAL DE AUTOS"
FROM CLIENTE_COAR C JOIN CLIENTE_AUTOMOVIL_COAR CA ON C.ID_CLIENTE = CA.ID_CLIENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;

-- PASO 3: INTEGRAR EN UNA SOLA CONSULTA EL PASO 1 Y EL PASO 2 (HAVING)
SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) "TOTAL DE AUTOS"
FROM CLIENTE_COAR C JOIN CLIENTE_AUTOMOVIL_COAR CA ON C.ID_CLIENTE = CA.ID_CLIENTE
GROUP BY APATERNO, AMATERNO, NOMBRE 
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) 
FROM CLIENTE_COAR C JOIN CLIENTE_AUTOMOVIL_COAR CA ON C.ID_CLIENTE = CA.ID_CLIENTE 
GROUP BY APATERNO, AMATERNO, NOMBRE);

-- 26. Consultar el nombre completo de los clientes que han tenido más de 2 seguros.
SELECT * FROM CLIENTE_COAR;
SELECT * FROM POLIZA_COAR;

-- PASO 1: OBTENER EL TOTAL DE SEGUROS QUE TIENE CADA CLIENTE
SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) "TOTAL DE SEGUROS"
FROM CLIENTE_COAR C JOIN POLIZA_COAR P ON C.ID_CLIENTE = P.ID_CLIENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;

-- PASO 2: OBTENER LOS CLIENTES QUE TIENEN MAS DE 2 SEGUROS (HAVING)
SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) "TOTAL DE SEGUROS"
FROM CLIENTE_COAR C JOIN POLIZA_COAR P ON C.ID_CLIENTE = P.ID_CLIENTE
GROUP BY APATERNO, AMATERNO, NOMBRE HAVING COUNT(*) > 2;

-- 27. Consultar el nombre del agente de ventas que más seguros ha vendido.
SELECT * FROM AGENTE_VENTAS_COAR;
SELECT * FROM POLIZA_COAR;

-- PASO 1: OBTENER EL TOTAL DE POLIZAS VENDIDAS POR CADA AGENTE
SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) "TOTAL DE POLIZAS"
FROM AGENTE_VENTAS_COAR A JOIN POLIZA_COAR P ON A.ID_AGENTE = P.ID_AGENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;

-- PASO 2: OBTENER EL VALOR MAS ALTO DEL TOTAL OBTENIDO DEL PASO 1
SELECT MAX(COUNT(*)) "TOTAL DE POLIZAS"
FROM AGENTE_VENTAS_COAR A JOIN POLIZA_COAR P ON A.ID_AGENTE = P.ID_AGENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;

-- PASO 3: INTEGRAR EN UNA SOLA CONSULTA EL PASO 1 Y EL PASO 2 (HAVING)
SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) "TOTAL DE POLIZAS VENDIDAS"
FROM AGENTE_VENTAS_COAR A JOIN POLIZA_COAR P ON A.ID_AGENTE = P.ID_AGENTE
GROUP BY APATERNO, AMATERNO, NOMBRE HAVING COUNT(*) = (SELECT MAX(COUNT(*))
FROM AGENTE_VENTAS_COAR A JOIN POLIZA_COAR P ON A.ID_AGENTE = P.ID_AGENTE
GROUP BY APATERNO, AMATERNO, NOMBRE);

-- 28. Consultar el tipo de seguro más vendido.
SELECT * FROM TIPO_SEGURO_COAR;
SELECT * FROM POLIZA_COAR;

-- PASO 1: OBTENER EL TOTAL DE POLIZAS EMITIDAS POR CADA TIPO DE SEGURO
SELECT TS.ID_TIPO_SEGURO, TS.DESCRIPCION, COUNT(*) "TOTAL DE POLIZAS"
FROM TIPO_SEGURO_COAR TS JOIN POLIZA_COAR P ON TS.ID_TIPO_SEGURO = P.ID_TIPO_SEGURO
GROUP BY TS.ID_TIPO_SEGURO, TS.DESCRIPCION;

-- PASO 2: OBTENER EL VALOR MAS ALTO DEL TOTAL OBTENIDO DEL PASO 1
SELECT MAX(COUNT(*)) "TOTAL DE POLIZAS"
FROM TIPO_SEGURO_COAR TS JOIN POLIZA_COAR P ON TS.ID_TIPO_SEGURO = P.ID_TIPO_SEGURO
GROUP BY TS.ID_TIPO_SEGURO, TS.DESCRIPCION;

-- PASO 3: INTEGRAR EN UNA SOLA CONSULTA EL PASO 1 Y EL PASO 2 (HAVING)
SELECT TS.ID_TIPO_SEGURO, TS.DESCRIPCION, COUNT(*) "TOTAL DE POLIZAS"
FROM TIPO_SEGURO_COAR TS JOIN POLIZA_COAR P ON TS.ID_TIPO_SEGURO = P.ID_TIPO_SEGURO
GROUP BY TS.ID_TIPO_SEGURO, TS.DESCRIPCION HAVING COUNT(*) = (SELECT MAX(COUNT(*))
FROM TIPO_SEGURO_COAR TS JOIN POLIZA_COAR P ON TS.ID_TIPO_SEGURO = P.ID_TIPO_SEGURO
GROUP BY TS.ID_TIPO_SEGURO, TS.DESCRIPCION);

-- 29. Consultar el nombre completo del empleado que menos pólizas ha vendido.
SELECT * FROM AGENTE_VENTAS_COAR;
SELECT * FROM POLIZA_COAR;

-- PASO 1: OBTENER EL TOTAL DE POLIZAS VENDIDAS POR CADA AGENTE
SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) "TOTAL DE POLIZAS"
FROM AGENTE_VENTAS_COAR A JOIN POLIZA_COAR P ON A.ID_AGENTE = P.ID_AGENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;

-- PASO 2: OBTENER EL VALOR MAS BAJO DEL TOTAL OBTENIDO DEL PASO 1
SELECT MIN(COUNT(*)) "TOTAL"
FROM AGENTE_VENTAS_COAR A JOIN POLIZA_COAR P ON A.ID_AGENTE = P.ID_AGENTE
GROUP BY APATERNO, AMATERNO, NOMBRE;

-- PASO 3: INTEGRAR EN UNA SOLA CONSULTA EL PASO 1 Y EL PASO 2 (HAVING)
SELECT APATERNO, AMATERNO, NOMBRE, COUNT(*) "MINIMO DE POLIZAS VENDIDAS"
FROM AGENTE_VENTAS_COAR A JOIN POLIZA_COAR P ON A.ID_AGENTE = P.ID_AGENTE
GROUP BY APATERNO, AMATERNO, NOMBRE HAVING COUNT(*) = (SELECT MIN(COUNT(*))
FROM AGENTE_VENTAS_COAR A JOIN POLIZA_COAR P ON A.ID_AGENTE = P.ID_AGENTE
GROUP BY APATERNO, AMATERNO, NOMBRE);

-- 30. Consultar el nombre del taller que más autos ha reparado.
SELECT * FROM TALLER_COAR;
SELECT * FROM REPARACION_COAR;

-- PASO 1: OBTENER EL TOTAL DE AUTOS REPARADOS POR CADA TALLER
SELECT T.ID_TALLER, T.NOMBRE, COUNT(*) "TOTAL DE AUTOS REPARADOS"
FROM TALLER_COAR T JOIN REPARACION_COAR R ON T.ID_TALLER = R.ID_TALLER
GROUP BY T.ID_TALLER, T.NOMBRE;

-- PASO 2: OBTENER EL VALOR MAS ALTO DEL TOTAL OBTENIDO DEL PASO 1
SELECT MAX(COUNT(*)) "TOTAL DE AUTOS REPARADOS"
FROM TALLER_COAR T JOIN REPARACION_COAR R ON T.ID_TALLER = R.ID_TALLER
GROUP BY T.ID_TALLER, T.NOMBRE;

-- PASO 3: INTEGRAR EN UNA SOLA CONSULTA EL PASO 1 Y EL PASO 2 (HAVING)
SELECT T.ID_TALLER, T.NOMBRE, COUNT(*) "TOTAL DE AUTOS REPARADOS"
FROM TALLER_COAR T JOIN REPARACION_COAR R ON T.ID_TALLER = R.ID_TALLER
GROUP BY T.ID_TALLER, T.NOMBRE HAVING COUNT(*) = (SELECT MAX(COUNT(*))
FROM TALLER_COAR T JOIN REPARACION_COAR R ON T.ID_TALLER = R.ID_TALLER
GROUP BY T.ID_TALLER, T.NOMBRE);

COMMIT;